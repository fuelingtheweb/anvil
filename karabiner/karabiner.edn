;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; !! | mandatory command + control + option + shift (hyper)
;; ## | optional any
{
    ; :simlayer-threshold 250
    :profiles {
        :Default {
            :default true
            :sim 100 ;; simultaneous_threshold_milliseconds (def: 50)
            ;; keys need to be pressed within this threshold to be considered simultaneous
            :delay 500 ;; to_delayed_action_delay_milliseconds (def: 500)
            ;; basically it means time after which the key press is count delayed
            :alone 1000 ;; to_if_alone_timeout_milliseconds (def: 1000)
            ;; hold for 995s and single tap registered; hold for 1005s and seen as modifier
            :held 500 ;; to_if_held_down_threshold_milliseconds (def: 500)
            ;; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)
        }
    }
    :templates {
        :launch "open -a '%s'"
        :hs "open -g 'hammerspoon://%s'"
        :alfred "osascript -e 'tell application id \"com.runningwithcrayons.Alfred\" to run trigger \"%s\" in workflow \"%s\"'"
        :alfredsearch "osascript -e 'tell application id \"com.runningwithcrayons.Alfred\" to search \"%s\"'"
        :sublime "/usr/local/bin/subl \"%s\""
        :atom "/usr/local/bin/atom \"%s\""
        :chrome "\"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome\" \"%s\" --profile-directory=\"Default\""
    }
    :layers {
        :HyperMode {:key :caps_lock :alone {:key :escape}}
    }
    :simlayers {
        :TabMode {:key :tab}
        ; q
        ; w
        ; e
        :PaneMode {:key :r}
        :TestMode {:key :t}
        :yank-mode {:key :y}
        :SelectUntilMode {:key :u}
        :select-inside-mode {:key :i}
        :open-mode {:key :o}
        :paste-mode {:key :p}
        :destroy-mode {:key :open_bracket}
        ; ]
        :CaseMode {:key :a}
        :snippet-mode {:key :s}
        :ViMode {:key :d}
        :GeneralMode {:key :f}
        :google-mode {:key :g}
        :command-mode {:key :semicolon}
        :extended-command-mode {:key :quote}
        :jump-to-mode {:key :return_or_enter}
        :CaseDialog {:key :z}
        ; x
        :CodeMode {:key :c}
        :ViVisualMode {:key :v}
        ; b
        :change-mode {:key :n}
        :media-mode {:key :m}
        :launch-mode {:key :comma}
        :AppMode {:key :period}
        :search-mode {:key :slash}
        :WindowManager {:key :spacebar}
    }
    :main [
        ;; each manipulator has a description and multiple rules

        ;;{:des "..."                               ;; -> description
        ;; :rules[
        ;;          [<from>  <to>  <conditions> <other options>]    ;; -> rule 1
        ;;          [<from>  <to>  <conditions> <other options>]    ;; -> rule 2
        ;; ]}
        ;;
        ;; <from> can be keywords defined in froms or keycodes without {:not-from true}
        ;; <to> can be keywords defined in tos, keycodes without {:not-to true} or strings (shell script)
        ;; <conditions> can be keywords defined in layers, devices, applications
        ;; <other options> {:other {:parameters {:to_delayed_action_delay_milliseconds 100 :basic.to_if_alone_timeout_milliseconds 500 :basic.to_if_held_down_threshold_milliseconds 250}} }

        ;; if simplified modifier is used in <to>, optional(#) definition will be ignored.

        ;; (custom variables) & modifiers -> Advanced
        ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#custom-variable
        ; {
        ;     :des "Use right command for sticky vi and vi visual modes"
        ;     :rules [
        ;         [:right_command [["sticky-vi-mode" 0] ["sticky-vi-visual-mode" 1]] ["right-command-pressed-once" 1]]
        ;         [:right_command [:right_command ["right-command-pressed-once" 1] ["sticky-vi-mode" 1]] [["sticky-vi-mode" 0] ["sticky-vi-visual-mode" 0]] {:delayed {:invoked ["right-command-pressed-once" 0] :canceled ["right-command-pressed-once" 0]}}]
        ;         :sticky-vi-mode
        ;         [:right_command ["sticky-vi-mode" 0]]
        ;         :sticky-vi-visual-mode
        ;         [:right_command ["sticky-vi-visual-mode" 0]]
        ;     ]
        ; }
        ; {
        ;     :des   "Sticky Vi Mode (Press right command once)"
        ;     :rules [:sticky-vi-mode
        ;         [:##j :down_arrow]
        ;         [:##k :up_arrow]
        ;         [:##h :left_arrow]
        ;         [:##l :right_arrow]
        ;         [:##b :!Oleft_arrow]
        ;         [:##w :!Oright_arrow]
        ;         [:##0 :!Cleft_arrow]
        ;         [:##4 :!Cright_arrow]
        ;         [:##a :!Cright_arrow]
        ;         [:##i :!Cleft_arrow]
        ;         [:##n :!Cdown_arrow]
        ;         [:##u :!Cup_arrow]
        ;     ]
        ; }
        ; {
        ;     :des   "Sticky Vi Visual Mode (Press right command twice)"
        ;     :rules [:sticky-vi-visual-mode
        ;         [:##j :!Sdown_arrow]
        ;         [:##k :!Sup_arrow]
        ;         [:##h :!Sleft_arrow]
        ;         [:##l :!Sright_arrow]
        ;         [:##b :!SOleft_arrow]
        ;         [:##e :!SOright_arrow]
        ;         [:##0 :!SCleft_arrow]
        ;         [:##4 :!SCright_arrow]
        ;         [:##open_bracket :!SOup_arrow]
        ;         [:##close_bracket :!SOdown_arrow]
        ;     ]
        ; }
        {
            :des "Misc"
            :rules [
                [:right_option [[:hs "misc-optionPressedTwice"] ["pending" 0]] ["pending" 1]]
                [:right_option
                    ["pending" 1]
                    ["pending" 0]
                    {:delayed {:invoked [[:hs "misc-optionPressedOnce"] ["pending" 0]] :canceled ["pending" 0]} :params {:delay 150}}
                ]

                [:fn {:pkey :button1}] ; Mouse click. Hold for dragging
                [:!TCf :escape] ; Escape
            ]
        }
        {
            :des "Hyper Mode - Mousekey"
            :rules [:hyper-mode
                [:down_arrow {:mkey {:y 1536}}]
                [:up_arrow {:mkey {:y -1536}}]
                [:left_arrow {:mkey {:x -1536}}]
                [:right_arrow {:mkey {:x 1536}}]
                ; [:return_or_enter {:pkey :button1}]
                [:!Creturn_or_enter {:pkey :button2}]
            ]
        }
        {
            :des "Hyper Mode (Key: Caps Lock)"
            :rules [:HyperMode
                [:y [:hs "handle-karabiner?layer=HyperMode&key=y"]]
                [:u [:hs "handle-karabiner?layer=HyperMode&key=u"]]
                [:i [:hs "handle-karabiner?layer=HyperMode&key=i"]]
                [:o [:hs "handle-karabiner?layer=HyperMode&key=o"]]
                [:p [:hs "handle-karabiner?layer=HyperMode&key=p"]]
                [:open_bracket [:hs "handle-karabiner?layer=HyperMode&key=open_bracket"]]
                [:close_bracket [:hs "handle-karabiner?layer=HyperMode&key=close_bracket"]]
                [:h [:hs "handle-karabiner?layer=HyperMode&key=h"]]
                [:j [:hs "handle-karabiner?layer=HyperMode&key=j"]]
                [:k [:hs "handle-karabiner?layer=HyperMode&key=k"]]
                [:l [:hs "handle-karabiner?layer=HyperMode&key=l"]]
                [:semicolon [:hs "handle-karabiner?layer=HyperMode&key=semicolon"]]
                [:quote [:hs "handle-karabiner?layer=HyperMode&key=quote"]]
                [:return_or_enter [:hs "handle-karabiner?layer=HyperMode&key=return_or_enter"]]
                [:b [:hs "handle-karabiner?layer=HyperMode&key=b"]]
                [:n [:hs "handle-karabiner?layer=HyperMode&key=n"]]
                [:m [:hs "handle-karabiner?layer=HyperMode&key=m"]]
                [:comma [:hs "handle-karabiner?layer=HyperMode&key=comma"]]
                [:period [:hs "handle-karabiner?layer=HyperMode&key=period"]]
                [:slash [:hs "handle-karabiner?layer=HyperMode&key=slash"]]
                [:right_shift [:hs "handle-karabiner?layer=HyperMode&key=right_shift"]]
                [:spacebar [:hs "handle-karabiner?layer=HyperMode&key=spacebar"]]
            ]
        }
        {
            :des "Tab Mode (Key: tab)"
            :rules [:TabMode
                [:y [:hs "handle-karabiner?layer=TabMode&key=y"]]
                [:u [:hs "handle-karabiner?layer=TabMode&key=u"]]
                [:i [:hs "handle-karabiner?layer=TabMode&key=i"]]
                [:o [:hs "handle-karabiner?layer=TabMode&key=o"]]
                [:p [:hs "handle-karabiner?layer=TabMode&key=p"]]
                [:open_bracket [:hs "handle-karabiner?layer=TabMode&key=open_bracket"]]
                [:close_bracket [:hs "handle-karabiner?layer=TabMode&key=close_bracket"]]
                [:h [:hs "handle-karabiner?layer=TabMode&key=h"]]
                [:j [:hs "handle-karabiner?layer=TabMode&key=j"]]
                [:k [:hs "handle-karabiner?layer=TabMode&key=k"]]
                [:l [:hs "handle-karabiner?layer=TabMode&key=l"]]
                [:semicolon [:hs "handle-karabiner?layer=TabMode&key=semicolon"]]
                [:quote [:hs "handle-karabiner?layer=TabMode&key=quote"]]
                [:return_or_enter [:hs "handle-karabiner?layer=TabMode&key=return_or_enter"]]
                [:b [:hs "handle-karabiner?layer=TabMode&key=b"]]
                [:n [:hs "handle-karabiner?layer=TabMode&key=n"]]
                [:m [:hs "handle-karabiner?layer=TabMode&key=m"]]
                [:comma [:hs "handle-karabiner?layer=TabMode&key=comma"]]
                [:period [:hs "handle-karabiner?layer=TabMode&key=period"]]
                [:slash [:hs "handle-karabiner?layer=TabMode&key=slash"]]
                [:right_shift [:hs "handle-karabiner?layer=TabMode&key=right_shift"]]
                [:spacebar [:hs "handle-karabiner?layer=TabMode&key=spacebar"]]
            ]
        }
        {
            :des "Pane Mode (Key: r)"
            :rules [:PaneMode
                [:y [:hs "handle-karabiner?layer=PaneMode&key=y"]]
                [:u [:hs "handle-karabiner?layer=PaneMode&key=u"]]
                [:i [:hs "handle-karabiner?layer=PaneMode&key=i"]]
                [:o [:hs "handle-karabiner?layer=PaneMode&key=o"]]
                [:p [:hs "handle-karabiner?layer=PaneMode&key=p"]]
                [:open_bracket [:hs "handle-karabiner?layer=PaneMode&key=open_bracket"]]
                [:close_bracket [:hs "handle-karabiner?layer=PaneMode&key=close_bracket"]]
                [:h [:hs "handle-karabiner?layer=PaneMode&key=h"]]
                [:j [:hs "handle-karabiner?layer=PaneMode&key=j"]]
                [:k [:hs "handle-karabiner?layer=PaneMode&key=k"]]
                [:l [:hs "handle-karabiner?layer=PaneMode&key=l"]]
                [:semicolon [:hs "handle-karabiner?layer=PaneMode&key=semicolon"]]
                [:quote [:hs "handle-karabiner?layer=PaneMode&key=quote"]]
                [:return_or_enter [:hs "handle-karabiner?layer=PaneMode&key=return_or_enter"]]
                [:b [:hs "handle-karabiner?layer=PaneMode&key=b"]]
                [:n [:hs "handle-karabiner?layer=PaneMode&key=n"]]
                [:m [:hs "handle-karabiner?layer=PaneMode&key=m"]]
                [:comma [:hs "handle-karabiner?layer=PaneMode&key=comma"]]
                [:period [:hs "handle-karabiner?layer=PaneMode&key=period"]]
                [:slash [:hs "handle-karabiner?layer=PaneMode&key=slash"]]
                [:right_shift [:hs "handle-karabiner?layer=PaneMode&key=right_shift"]]
                [:spacebar [:hs "handle-karabiner?layer=PaneMode&key=spacebar"]]
            ]
        }
        {
            :des "Test Mode (Key: T)"
            :rules [:TestMode
                [:l [:hs "handle-karabiner?layer=TestMode&key=l"]]
                [:k [:hs "handle-karabiner?layer=TestMode&key=k"]]
                [:m [:hs "handle-karabiner?layer=TestMode&key=m"]]
            ]
        }
        {
            :des "Yank Mode (Key: Y)"
            :rules [:yank-mode
                [:e [:hs "yank-toEndOfWord"]]
                [:r [:hs "yank-relativeFilePath"]]

                [:w [:hs "yank-word"]]
                [:t [:escape :y :i :t]]; t -> tag
                [:s [:escape :y :i :quote]]; s -> single quotes
                [:d [:escape :y :i :!Squote]]; d -> double quotes
                [:z [:escape :y :i :z]]; z -> back ticks
                [:f [:escape :y :i :!S9]]; f -> parenthesis
                [:c [:escape :y :i :!Sopen_bracket]]; c -> braces
                [:b [:escape :y :i :open_bracket]]; b -> brackets

                [:a [:hs "yank-toEndOfLine"]]
                [:i [:hs "yank-toBeginningOfLine"]]
                [:v [:hs "yank-line"]]
                [:x [:hs "yank-character"]]

                [:caps_lock [:hs "yank-all"]]
                [:q [:hs "yank-viewPath"]]
            ]
        }
        {
            :des "Select Until Mode (Key: u)"
            :rules [:SelectUntilMode
                [:tab [:hs "handle-karabiner?layer=SelectUntilMode&key=tab"]]
                [:q [:hs "handle-karabiner?layer=SelectUntilMode&key=q"]]
                [:w [:hs "handle-karabiner?layer=SelectUntilMode&key=w"]]
                [:e [:hs "handle-karabiner?layer=SelectUntilMode&key=e"]]
                [:r [:hs "handle-karabiner?layer=SelectUntilMode&key=r"]]
                [:t [:hs "handle-karabiner?layer=SelectUntilMode&key=t"]]
                [:caps_lock [:hs "handle-karabiner?layer=SelectUntilMode&key=caps_lock"]]
                [:a [:hs "handle-karabiner?layer=SelectUntilMode&key=a"]]
                [:s [:hs "handle-karabiner?layer=SelectUntilMode&key=s"]]
                [:d [:hs "handle-karabiner?layer=SelectUntilMode&key=d"]]
                [:f [:hs "handle-karabiner?layer=SelectUntilMode&key=f"]]
                [:g [:hs "handle-karabiner?layer=SelectUntilMode&key=g"]]
                [:left_shift [:hs "handle-karabiner?layer=SelectUntilMode&key=left_shift"]]
                [:z [:hs "handle-karabiner?layer=SelectUntilMode&key=z"]]
                [:x [:hs "handle-karabiner?layer=SelectUntilMode&key=x"]]
                [:c [:hs "handle-karabiner?layer=SelectUntilMode&key=c"]]
                [:v [:hs "handle-karabiner?layer=SelectUntilMode&key=v"]]
                [:b [:hs "handle-karabiner?layer=SelectUntilMode&key=b"]]
                [:spacebar [:hs "handle-karabiner?layer=SelectUntilMode&key=spacebar"]]
            ]
        }
        {
            :des "Select Inside Mode (Key: i)"
            :rules [:select-inside-mode
                [:w [:hs "select-inside-word"]]
                [:t [:escape :v :i :t]]; t -> tag
                [:s [:escape :v :i :quote]]; s -> single quotes
                [:d [:escape :v :i :!Squote]]; d -> double quotes
                [:z [:escape :v :i :z]]; z -> back ticks
                [:f [:escape :v :i :!S9]]; f -> parenthesis
                [:c [:escape :v :i :!Sopen_bracket]]; c -> braces
                [:b [:escape :v :i :open_bracket]]; b -> brackets

                [:v [:hs "select-inside-line"]]
                [:x [:hs "select-inside-character"]]
            ]
        }
        {
            :des "Open Mode (Key: O)"
            :rules [:open-mode
                ; tab
                [:q [:hs "custom-open?key=Q"]]
                [:w [:hs "custom-open?key=W"]]
                [:e [:hs "custom-open?key=E"]]
                [:r [:hs "open-inAtom"]]
                [:t [:hs "custom-open?key=T"]]

                [:y [:hs "custom-open?key=Y"]]

                ; caps
                [:a [:sublime "~/.fuelingzsh/aliases"]]
                [:s [:sublime "~/.fuelingzsh/custom/espanso/default.yml"]]
                [:d "open ~/Downloads"]
                [:f [:hs "custom-open?key=F"]]
                [:g [:hs "open-inChrome"]]

                [:h [:sublime "~/.hammerspoon"]]
                [:k [:hs "open-karabiner"]]

                [:z [:sublime "~/.fuelingzsh"]]
                [:x [:hs "open-inTinkerwell"]]
                [:c [:hs "open-inSublimeMerge"]]
                [:v [:hs "open-inTablePlus"]]
                [:b [:hs "open-inFinder"]]

                [:m [:hs "custom-open?key=M"]]
            ]
        }
        {
            :des "Paste Mode (Key: P)"
            :rules [:paste-mode
                [:e [:hs "paste-toEndOfWord"]]

                [:w [:hs "paste-word"]]
                [:t [:escape :v :i :t :p]]; t -> tag
                [:s [:escape :v :i :quote :p]]; s -> single quotes
                [:d [:escape :v :i :!Squote :p]]; d -> double quotes
                [:z [:escape :v :i :z :p]]; z -> back ticks
                [:f [:escape :v :i :!S9 :p]]; f -> parenthesis
                [:c [:escape :v :i :!Sopen_bracket :p]]; c -> braces
                [:b [:escape :v :i :open_bracket :p]]; b -> brackets

                [:a [:hs "paste-toEndOfLine"]]
                [:i [:hs "paste-toBeginningOfLine"]]
                [:v [:hs "paste-line"]]
                [:x [:hs "paste-character"]]

                [:caps_lock [:alfred "paste:strip" "com.fuelingtheweb.commands"]]
            ]
        }
        {
            :des "Destroy Mode (Key: [)"
            :rules [:destroy-mode
                [:e [:hs "destroy-toEndOfWord"]]

                [:w [:hs "destroy-word"]]
                [:t [:escape :d :i :t]]; t -> tag
                [:s [:escape :d :i :quote]]; s -> single quotes
                [:d [:escape :d :i :!Squote]]; d -> double quotes
                [:z [:escape :d :i :z]]; z -> back ticks
                [:f [:escape :d :i :!S9]]; f -> parenthesis
                [:c [:escape :d :i :!Sopen_bracket]]; c -> braces
                [:b [:escape :d :i :open_bracket]]; b -> brackets

                [:a [:hs "destroy-toEndOfLine"]]
                [:i [:hs "destroy-toBeginningOfLine"]]
                [:v [:hs "destroy-line"]]
                [:x [:hs "destroy-character"]]
                [:spacebar :delete_or_backspace]
            ]
        }
        {
            :des "Case Mode (Key: A)"
            :rules [:CaseMode
                [:y [:hs "handle-karabiner?layer=CaseMode&key=y"]]
                [:u [:hs "handle-karabiner?layer=CaseMode&key=u"]]
                [:i [:hs "handle-karabiner?layer=CaseMode&key=i"]]
                [:o [:hs "handle-karabiner?layer=CaseMode&key=o"]]
                [:p [:hs "handle-karabiner?layer=CaseMode&key=p"]]
                [:open_bracket [:hs "handle-karabiner?layer=CaseMode&key=open_bracket"]]
                [:close_bracket [:hs "handle-karabiner?layer=CaseMode&key=close_bracket"]]
                [:h [:hs "handle-karabiner?layer=CaseMode&key=h"]]
                [:j [:hs "handle-karabiner?layer=CaseMode&key=j"]]
                [:k [:hs "handle-karabiner?layer=CaseMode&key=k"]]
                [:l [:hs "handle-karabiner?layer=CaseMode&key=l"]]
                [:semicolon [:hs "handle-karabiner?layer=CaseMode&key=semicolon"]]
                [:quote [:hs "handle-karabiner?layer=CaseMode&key=quote"]]
                [:return_or_enter [:hs "handle-karabiner?layer=CaseMode&key=return_or_enter"]]
                [:b [:hs "handle-karabiner?layer=CaseMode&key=b"]]
                [:n [:hs "handle-karabiner?layer=CaseMode&key=n"]]
                [:m [:hs "handle-karabiner?layer=CaseMode&key=m"]]
                [:comma [:hs "handle-karabiner?layer=CaseMode&key=comma"]]
                [:period [:hs "handle-karabiner?layer=CaseMode&key=period"]]
                [:slash [:hs "handle-karabiner?layer=CaseMode&key=slash"]]
                [:right_shift [:hs "handle-karabiner?layer=CaseMode&key=right_shift"]]
                [:spacebar [:hs "handle-karabiner?layer=CaseMode&key=spacebar"]]
            ]
        }
        {
            :des "Snippet Mode (Key: S)"
            :rules [:snippet-mode
                [:e [:hs "snippet?name=elseif"]]
                ; r
                [:t [:hs "snippet-this"]]
                [:d [:hs "snippet?name=dd"]]
                ; f, g, v
                ; y, u
                [:i [:hs "snippet?name=if"]]
                ; o
                [:p [:hs "snippet?name=property"]]
                [:open_bracket [:hs "snippet?name=echo"]]
                ; ]
                ; h, j, k
                [:l [:hs "snippet?name=log"]]
                ; ;, ', return
                [:n [:hs "snippet?name=af"]]

                ; Snippet: Method
                [:m [[:hs "snippet-mode-method"] ["pending" 0]] ["pending" 1]]
                [:m
                    ["pending" 1]
                    ["pending" 0]
                    {:delayed {:invoked [[:hs "snippet-method"] ["pending" 0]] :canceled ["pending" 0]} :params {:delay 150}}
                ]

                ; ,, ., /
            ]
        }
        {
            :des "Vi Mode (Key: D)"
            :rules [:ViMode
                [:##y :!Cup_arrow] ; Top of page
                [:##u :page_up]
                [:##i [:hs "handle-karabiner?layer=ViMode&key=i"]]
                [:##o [:hs "handle-karabiner?layer=ViMode&key=o"]]
                [:##h :left_arrow]
                [:##j :down_arrow]
                [:##k :up_arrow]
                [:##l :right_arrow]
                [:##semicolon [:hs "handle-karabiner?layer=ViMode&key=semicolon"]]
                [:##quote [:hs "handle-karabiner?layer=ViMode&key=quote"]]
                [:##n :!Cdown_arrow] ; Bottom of page
                [:##m :page_down]
                [:##period :!Oright_arrow] ; Previous word
                [:##comma :!Oleft_arrow] ; Next word
            ]
        }
        {
            :des "General Mode (Key: F)"
            :rules [:GeneralMode
                [:tab [:hs "handle-karabiner?layer=GeneralMode&key=tab"]]
                [:q [:hs "handle-karabiner?layer=GeneralMode&key=q"]]
                [:w [:hs "handle-karabiner?layer=GeneralMode&key=w"]]
                [:e [:hs "handle-karabiner?layer=GeneralMode&key=e"]]
                [:r [:hs "handle-karabiner?layer=GeneralMode&key=r"]]
                [:t [:hs "handle-karabiner?layer=GeneralMode&key=t"]]
                [:y [:hs "handle-karabiner?layer=GeneralMode&key=y"]]
                [:u [:hs "handle-karabiner?layer=GeneralMode&key=u"]]
                [:i [:hs "handle-karabiner?layer=GeneralMode&key=i"]]
                [:o [:hs "handle-karabiner?layer=GeneralMode&key=o"]]
                [:p [:hs "handle-karabiner?layer=GeneralMode&key=p"]]
                [:open_bracket [:hs "handle-karabiner?layer=GeneralMode&key=open_bracket"]]
                [:close_bracket [:hs "handle-karabiner?layer=GeneralMode&key=close_bracket"]]
                [:caps_lock [:hs "handle-karabiner?layer=GeneralMode&key=caps_lock"]]
                [:a [:hs "handle-karabiner?layer=GeneralMode&key=a"]]
                [:s [:hs "handle-karabiner?layer=GeneralMode&key=s"]]
                [:d [:hs "handle-karabiner?layer=GeneralMode&key=d"]]
                [:g [:hs "handle-karabiner?layer=GeneralMode&key=g"]]
                [:h [:hs "handle-karabiner?layer=GeneralMode&key=h"]]
                [:j [:hs "handle-karabiner?layer=GeneralMode&key=j"]]
                [:k [:hs "handle-karabiner?layer=GeneralMode&key=k"]]
                [:l [:hs "handle-karabiner?layer=GeneralMode&key=l"]]
                [:semicolon [:hs "handle-karabiner?layer=GeneralMode&key=semicolon"]]
                [:quote [:hs "handle-karabiner?layer=GeneralMode&key=quote"]]
                [:return_or_enter [:hs "handle-karabiner?layer=GeneralMode&key=return_or_enter"]]
                [:left_shift [:hs "handle-karabiner?layer=GeneralMode&key=left_shift"]]
                [:z [:hs "handle-karabiner?layer=GeneralMode&key=z"]]
                [:x [:hs "handle-karabiner?layer=GeneralMode&key=x"]]
                [:c [:hs "handle-karabiner?layer=GeneralMode&key=c"]]
                [:v [:hs "handle-karabiner?layer=GeneralMode&key=v"]]
                [:b [:hs "handle-karabiner?layer=GeneralMode&key=b"]]
                [:n [:hs "handle-karabiner?layer=GeneralMode&key=n"]]
                [:m [:hs "handle-karabiner?layer=GeneralMode&key=m"]]
                [:comma [:hs "handle-karabiner?layer=GeneralMode&key=comma"]]
                [:period [:hs "handle-karabiner?layer=GeneralMode&key=period"]]
                [:slash [:hs "handle-karabiner?layer=GeneralMode&key=slash"]]
                [:right_shift [:hs "handle-karabiner?layer=GeneralMode&key=right_shift"]]
                [:spacebar [:hs "handle-karabiner?layer=GeneralMode&key=spacebar"]]
            ]
        }
        {
            :des "Google Mode (Key: G)"
            :rules [:google-mode
                [:y [:hs "custom-open?key=Y"]]
                ; u
                [:i [:chrome "https://inbox.google.com"]]
                [:o [:hs "google-toggleIncognito"]]
                [:p :!SCm] ; Chrome: Show profiles list
                [:open_bracket :!TOCg] ; Chrome: Group Tab
                ; ]

                [:h [:alfred "history" "com.thomasupton.chrome-history"]]
                ; j
                ; k
                [:l :!!l] ; Lastpass
                ; ;
                [:semicolon :!SCm] ; Chrome: Tab Manager
                [:quote [:hs "google-openAndReload"]]
                [:return_or_enter :!Ow] ; Chrome: Dismiss downloads bar

                [:n :!Cd] ; Chrome: Save Bookmark
                [:m [:alfred "bookmarks" "com.chrome.bookmarks"]] ; Google bookmarks
                [:comma :!OCi] ; Chrome: Toggle Dev Tools
                [:period :!SCd] ; Chrome: Toggle Dev Tools docking
                ; /
            ]
        }
        {
            :des "Command Mode (Key: ;)"
            :rules [:command-mode
                [:tab :!Stab] ; Shift Tab
                [:q :!Cq] ; Quit

                ; Close window or close all windows
                [:w [[:hs "command-closeAllWindows"] ["pending" 0]] ["pending" 1]]
                [:w
                    ["pending" 1]
                    ["pending" 0]
                    {:delayed {:invoked [[:hs "command-closeWindow"] ["pending" 0]] :canceled ["pending" 0]} :params {:delay 150}}
                ]

                ; Edit With
                [:e [[:hs "command-edit?done=1"] ["pending" 0]] ["pending" 1]]
                [:e
                    ["pending" 1]
                    ["pending" 0]
                    {:delayed {:invoked [[:hs "command-edit"] ["pending" 0]] :canceled ["pending" 0]} :params {:delay 150}}
                ]

                ; Reload or Chrome hard refresh
                [:r [[:hs "command-reloadSecondary"] ["pending" 0]] ["pending" 1]]
                [:r
                    ["pending" 1]
                    ["pending" 0]
                    {:delayed {:invoked [[:hs "command-reload"] ["pending" 0]] :canceled ["pending" 0]} :params {:delay 150}}
                ]

                ; t

                [:caps_lock [:alfred "commands" "com.fuelingtheweb.commands"]]
                [:a :!Ca] ; Select All

                ; Save or Save and reload Chrome
                [:s [[:hs "command-saveAndReload"] ["pending" 0]] ["pending" 1]]
                [:s
                    ["pending" 1]
                    ["pending" 0]
                    {:delayed {:invoked [[:hs "command-save"] ["pending" 0]] :canceled ["pending" 0]} :params {:delay 150}}
                ]

                [:d [:hs "command-done"]]
                [:f [:hs "command-find"]]
                [:g :!SCh] ; Atom: Toggle Git Palette

                [:z [:alfredsearch "sleep"]] ; Alfred: Sleep
                [:x [:hs "command-cancelOrDelete"]] ; Control C
                ; c
                [:v [:escape :y :y :p]] ; Duplicate line
                ; b
            ]
        }
        {
            :des "Extended Command Mode (Key: ')"
            :rules [:extended-command-mode
                ; q
                [:w [:hs "command-surroundText"]]
                ; e
                [:r :!SCz] ; Redo
                ; t

                [:caps_lock [:hs "command-dismissNotifications"]] ; Dismiss notifications
                [:a :!OCbackslash] ; Alfred: Action File
                [:s :!SC4] ; Screenshot to filesystem
                [:d [:hs "command-duplicate"]]
                [:f [:!SCbackslash]] ; Atom: Reveal active file in tree view
                [:g :!OCd] ; Toggle dock visibility

                [:z :!Cz] ; Undo
                ; x
                [:c :!STC4] ; Screenshot to clipboard
                [:v :!TOCs] ; Vimac: Enable Scroll
                [:b :!STCb] ; Bartender: Show

                [:n :!SCn] ; New window / folder
            ]
        }
        {
            :des "Jump to Mode (Key: return)"
            :rules [:jump-to-mode
                [:s [:f :quote]]; s -> single quotes
                [:d [:f :!Squote]]; d -> double quotes
                [:z [:f :!Ograve_accent_and_tilde]]; z -> back ticks

                ; opening / closing parenthesis
                [:f [:!S0 ["bracket-pending" 0]] ["bracket-pending" 1]]
                [:f
                    [:f ["bracket-pending" 1]]
                    ["bracket-pending" 0]
                    {:delayed {:invoked [:!S9 ["bracket-pending" 0]] :canceled ["bracket-pending" 0]} :params {:delay 150}}
                ]

                ; opening / closing braces
                [:c [:!Sclose_bracket ["bracket-pending" 0]] ["bracket-pending" 1]]
                [:c
                    [:f ["bracket-pending" 1]]
                    ["bracket-pending" 0]
                    {:delayed {:invoked [:!Sopen_bracket ["bracket-pending" 0]] :canceled ["bracket-pending" 0]} :params {:delay 150}}
                ]

                ; opening / closing brackets
                [:b [:close_bracket ["bracket-pending" 0]] ["bracket-pending" 1]]
                [:b
                    [:f ["bracket-pending" 1]]
                    ["bracket-pending" 0]
                    {:delayed {:invoked [:open_bracket ["bracket-pending" 0]] :canceled ["bracket-pending" 0]} :params {:delay 150}}
                ]

                [:t [:!Sopen_bracket]] ; Previous block
            ]
        }
        {
            :des "Dialog Case Mode (Key: Z)"
            :rules [:CaseDialog
                [:y [:hs "handle-karabiner?layer=CaseDialog&key=y"]]
                [:u [:hs "handle-karabiner?layer=CaseDialog&key=u"]]
                [:i [:hs "handle-karabiner?layer=CaseDialog&key=i"]]
                [:o [:hs "handle-karabiner?layer=CaseDialog&key=o"]]
                [:p [:hs "handle-karabiner?layer=CaseDialog&key=p"]]
                [:open_bracket [:hs "handle-karabiner?layer=CaseDialog&key=open_bracket"]]
                [:close_bracket [:hs "handle-karabiner?layer=CaseDialog&key=close_bracket"]]
                [:h [:hs "handle-karabiner?layer=CaseDialog&key=h"]]
                [:j [:hs "handle-karabiner?layer=CaseDialog&key=j"]]
                [:k [:hs "handle-karabiner?layer=CaseDialog&key=k"]]
                [:l [:hs "handle-karabiner?layer=CaseDialog&key=l"]]
                [:semicolon [:hs "handle-karabiner?layer=CaseDialog&key=semicolon"]]
                [:quote [:hs "handle-karabiner?layer=CaseDialog&key=quote"]]
                [:return_or_enter [:hs "handle-karabiner?layer=CaseDialog&key=return_or_enter"]]
                [:b [:hs "handle-karabiner?layer=CaseDialog&key=b"]]
                [:n [:hs "handle-karabiner?layer=CaseDialog&key=n"]]
                [:m [:hs "handle-karabiner?layer=CaseDialog&key=m"]]
                [:comma [:hs "handle-karabiner?layer=CaseDialog&key=comma"]]
                [:period [:hs "handle-karabiner?layer=CaseDialog&key=period"]]
                [:slash [:hs "handle-karabiner?layer=CaseDialog&key=slash"]]
                [:right_shift [:hs "handle-karabiner?layer=CaseDialog&key=right_shift"]]
                [:spacebar [:hs "handle-karabiner?layer=CaseDialog&key=spacebar"]]
            ]
        }
        {
            :des "Code Mode (Key: C)"
            :rules [:CodeMode
                [:y [:hs "handle-karabiner?layer=CodeMode&key=y"]]
                [:u [:hs "handle-karabiner?layer=CodeMode&key=u"]]
                [:i [:hs "handle-karabiner?layer=CodeMode&key=i"]]
                [:o [:hs "handle-karabiner?layer=CodeMode&key=o"]]
                [:p [:hs "handle-karabiner?layer=CodeMode&key=p"]]
                [:open_bracket [:hs "handle-karabiner?layer=CodeMode&key=open_bracket"]]
                [:close_bracket [:hs "handle-karabiner?layer=CodeMode&key=close_bracket"]]
                [:h [:hs "handle-karabiner?layer=CodeMode&key=h"]]
                [:j [:hs "handle-karabiner?layer=CodeMode&key=j"]]
                [:k [:hs "handle-karabiner?layer=CodeMode&key=k"]]
                [:l [:hs "handle-karabiner?layer=CodeMode&key=l"]]
                [:semicolon [:hs "handle-karabiner?layer=CodeMode&key=semicolon"]]
                [:quote [:hs "handle-karabiner?layer=CodeMode&key=quote"]]
                [:return_or_enter [:hs "handle-karabiner?layer=CodeMode&key=return_or_enter"]]
                [:b [:hs "handle-karabiner?layer=CodeMode&key=b"]]
                [:n [:hs "handle-karabiner?layer=CodeMode&key=n"]]
                [:m [:hs "handle-karabiner?layer=CodeMode&key=m"]]
                [:comma [:hs "handle-karabiner?layer=CodeMode&key=comma"]]
                [:period [:hs "handle-karabiner?layer=CodeMode&key=period"]]
                [:slash [:hs "handle-karabiner?layer=CodeMode&key=slash"]]
                [:right_shift [:hs "handle-karabiner?layer=CodeMode&key=right_shift"]]
                [:spacebar [:hs "handle-karabiner?layer=CodeMode&key=spacebar"]]
            ]
        }
        {
            :des "Vi Visual Mode (Key: V)"
            :rules [:ViVisualMode
                [:##y :!SCup_arrow] ; Top of page
                [:##i :!SCleft_arrow]
                [:##o :!SCright_arrow]
                [:##open_bracket :!SOup_arrow]
                [:##close_bracket :!SOdown_arrow]
                [:##h :!Sleft_arrow]
                [:##j :!Sdown_arrow]
                [:##k :!Sup_arrow]
                [:##l :!Sright_arrow]
                [:##n :!SCdown_arrow] ; Bottom of page
                [:##period :!SOright_arrow] ; Previous word
                [:##comma :!SOleft_arrow] ; Next word
            ]
        }
        {
            :des "Change Mode (Key: n)"
            :rules [:change-mode
                [:e [:hs "change-toEndOfWord"]]

                [:w [:hs "change-word"]]
                [:t [:escape :c :i :t]]; t -> tag
                [:s [:escape :c :i :quote]]; s -> single quotes
                [:d [:escape :c :i :!Squote]]; d -> double quotes
                [:z [:escape :c :i :z]]; z -> back ticks
                [:f [:escape :c :i :!S9]]; f -> parenthesis
                [:c [:escape :c :i :!Sopen_bracket]]; c -> braces
                [:b [:escape :c :i :open_bracket]]; b -> brackets

                [:a [:hs "change-toEndOfLine"]]
                [:i [:hs "change-toBeginningOfLine"]]
                [:v [:hs "change-line"]]
                [:x [:hs "change-character"]]

                ; [:caps_lock :!SCv] ; Global Vim Mode
                [:caps_lock [:hs "text-disableVim"]]
            ]
        }
        {
            :des "Media Mode (Key: M)"
            :rules [:media-mode
                [:z [:alfredsearch "Sound"]]
                [:r [:hs "media-updateAudioDevice"]]
                [:s :!!z] ; Alfred: Spotify
                [:d :!SCd] ; Deafen in Discord
                [:a :!Tleft_arrow] ; Funimation: Start of video / previous video
                [:g :!Tright_arrow] ; Funimation: Next video
                [:v [:hs "media-focus"]]
                [:f [:hs "media-fullscreen"]]
                [:comma [:hs "media-back"]]
                [:period [:hs "media-forward"]]
            ]
        }
        {
            :des "Launch Mode (Key: ,)"
            :rules [:launch-mode
                ; tab
                [:q [:launch "Kaleidoscope.app"]]
                [:w [:launch "Transmit.app"]]
                [:e [:hs "launch-app?id=sublime"]]
                [:r [:hs "launch-app?id=atom"]]
                [:t [:hs "launch-app?id=iterm"]]

                [:caps_lock [:launch "Dash.app"]]

                ; Fanstastical or Alfred Preferences
                [:a [[:hs "launch-app?id=alfred-preferences"] ["pending" 0]] ["pending" 1]]
                [:a
                    ["pending" 1]
                    ["pending" 0]
                    {:delayed {:invoked [:!OCc ["pending" 0]] :canceled ["pending" 0]} :params {:delay 150}}
                ]

                [:s [:hs "launch-app?id=spotify"]]
                [:d [:launch "Discord.app"]]
                [:f [:launch "Notion.app"]]
                [:g [:hs "launch-app?id=chrome"]]

                ; Zoom or Screen
                [:z [[:launch "Screen.app"] ["pending" 0]] ["pending" 1]]
                [:z
                    ["pending" 1]
                    ["pending" 0]
                    {:delayed {:invoked [[:launch "zoom.us.app"] ["pending" 0]] :canceled ["pending" 0]} :params {:delay 150}}
                ]

                [:x [:hs "launch-beyond-code-app"]]
                [:c [:launch "Sublime Merge.app"]]
                [:v [:launch "TablePlus.app"]]
                [:b [:hs "launch-app?id=finder"]]

                [:spacebar [:hs "window-bringAllToFront"]]
            ]
        }
        {
            :des "App Mode (Key: .)"
            :rules [:AppMode
                [:tab [:hs "handle-karabiner?layer=AppMode&key=tab"]]
                [:q [:hs "handle-karabiner?layer=AppMode&key=q"]]
                [:w [:hs "handle-karabiner?layer=AppMode&key=w"]]
                [:e [:hs "handle-karabiner?layer=AppMode&key=e"]]
                [:r [:hs "handle-karabiner?layer=AppMode&key=r"]]
                [:t [:hs "handle-karabiner?layer=AppMode&key=t"]]
                [:y [:hs "handle-karabiner?layer=AppMode&key=y"]]
                [:u [:hs "handle-karabiner?layer=AppMode&key=u"]]
                [:i [:hs "handle-karabiner?layer=AppMode&key=i"]]
                [:o [:hs "handle-karabiner?layer=AppMode&key=o"]]
                [:p [:hs "handle-karabiner?layer=AppMode&key=p"]]
                [:open_bracket [:hs "handle-karabiner?layer=AppMode&key=open_bracket"]]
                [:close_bracket [:hs "handle-karabiner?layer=AppMode&key=close_bracket"]]
                [:caps_lock [:hs "handle-karabiner?layer=AppMode&key=caps_lock"]]
                [:a [:hs "handle-karabiner?layer=AppMode&key=a"]]
                [:s [:hs "handle-karabiner?layer=AppMode&key=s"]]
                [:d [:hs "handle-karabiner?layer=AppMode&key=d"]]
                [:f [:hs "handle-karabiner?layer=AppMode&key=f"]]
                [:g [:hs "handle-karabiner?layer=AppMode&key=g"]]
                [:h [:hs "handle-karabiner?layer=AppMode&key=h"]]
                [:j [:hs "handle-karabiner?layer=AppMode&key=j"]]
                [:k [:hs "handle-karabiner?layer=AppMode&key=k"]]
                [:l [:hs "handle-karabiner?layer=AppMode&key=l"]]
                [:semicolon [:hs "handle-karabiner?layer=AppMode&key=semicolon"]]
                [:quote [:hs "handle-karabiner?layer=AppMode&key=quote"]]
                [:return_or_enter [:hs "handle-karabiner?layer=AppMode&key=return_or_enter"]]
                [:left_shift [:hs "handle-karabiner?layer=AppMode&key=left_shift"]]
                [:z [:hs "handle-karabiner?layer=AppMode&key=z"]]
                [:x [:hs "handle-karabiner?layer=AppMode&key=x"]]
                [:c [:hs "handle-karabiner?layer=AppMode&key=c"]]
                [:v [:hs "handle-karabiner?layer=AppMode&key=v"]]
                [:b [:hs "handle-karabiner?layer=AppMode&key=b"]]
                [:n [:hs "handle-karabiner?layer=AppMode&key=n"]]
                [:m [:hs "handle-karabiner?layer=AppMode&key=m"]]
                [:comma [:hs "handle-karabiner?layer=AppMode&key=comma"]]
                [:slash [:hs "handle-karabiner?layer=AppMode&key=slash"]]
                [:right_shift [:hs "handle-karabiner?layer=AppMode&key=right_shift"]]
                [:spacebar [:hs "handle-karabiner?layer=AppMode&key=spacebar"]]
            ]
        }
        {
            :des "Search Mode (Key: /)"
            :rules [:search-mode
                [:caps_lock [:hs "search-default"]]
                [:w [:hs "window-searchInCurrentApp"]]
                [:t [:hs "search-tabs"]]

                [:a [:hs "window-searchAll"]]
                [:s :!Cr] ; Search for symbol
                [:f [:alfredsearch "open "]] ; Search files
                [:g [:alfred "google" "com.akikoz.alfred.websearchsuggest"]]

                [:z [:alfred "amazon" "com.akikoz.alfred.websearchsuggest"]]
                [:c [:slash :!Scomma :!Scomma :!Scomma :!Scomma :!Scomma :return_or_enter]] ; Search for conflicts
            ]
        }
        {
            :des "Window Mode (Key: Spacebar)"
            :rules [:WindowManager
                [:tab [:hs "handle-karabiner?layer=WindowManager&key=tab"]]
                [:q [:hs "handle-karabiner?layer=WindowManager&key=q"]]
                [:w [:hs "handle-karabiner?layer=WindowManager&key=w"]]
                [:e [:hs "handle-karabiner?layer=WindowManager&key=e"]]
                [:r [:hs "handle-karabiner?layer=WindowManager&key=r"]]
                [:t [:hs "handle-karabiner?layer=WindowManager&key=t"]]
                [:y [:hs "handle-karabiner?layer=WindowManager&key=y"]]
                [:u [:hs "handle-karabiner?layer=WindowManager&key=u"]]
                [:i [:hs "handle-karabiner?layer=WindowManager&key=i"]]
                [:o [:hs "handle-karabiner?layer=WindowManager&key=o"]]
                [:p [:hs "handle-karabiner?layer=WindowManager&key=p"]]
                [:open_bracket [:hs "handle-karabiner?layer=WindowManager&key=open_bracket"]]
                [:close_bracket [:hs "handle-karabiner?layer=WindowManager&key=close_bracket"]]
                [:caps_lock [:hs "handle-karabiner?layer=WindowManager&key=caps_lock"]]
                [:a [:hs "handle-karabiner?layer=WindowManager&key=a"]]
                [:s [:hs "handle-karabiner?layer=WindowManager&key=s"]]
                [:d [:hs "handle-karabiner?layer=WindowManager&key=d"]]
                [:f [:hs "handle-karabiner?layer=WindowManager&key=f"]]
                [:g [:hs "handle-karabiner?layer=WindowManager&key=g"]]
                [:h [:hs "handle-karabiner?layer=WindowManager&key=h"]]
                [:j [:hs "handle-karabiner?layer=WindowManager&key=j"]]
                [:k [:hs "handle-karabiner?layer=WindowManager&key=k"]]
                [:l [:hs "handle-karabiner?layer=WindowManager&key=l"]]
                [:semicolon [:hs "handle-karabiner?layer=WindowManager&key=semicolon"]]
                [:quote [:hs "handle-karabiner?layer=WindowManager&key=quote"]]
                [:return_or_enter [:hs "handle-karabiner?layer=WindowManager&key=return_or_enter"]]
                [:left_shift [:hs "handle-karabiner?layer=WindowManager&key=left_shift"]]
                [:z [:hs "handle-karabiner?layer=WindowManager&key=z"]]
                [:x [:hs "handle-karabiner?layer=WindowManager&key=x"]]
                [:c [:hs "handle-karabiner?layer=WindowManager&key=c"]]
                [:v [:hs "handle-karabiner?layer=WindowManager&key=v"]]
                [:b [:hs "handle-karabiner?layer=WindowManager&key=b"]]
                [:n [:hs "handle-karabiner?layer=WindowManager&key=n"]]
                [:m [:hs "handle-karabiner?layer=WindowManager&key=m"]]
                [:comma [:hs "handle-karabiner?layer=WindowManager&key=comma"]]
                [:period [:hs "handle-karabiner?layer=WindowManager&key=period"]]
                [:slash [:hs "handle-karabiner?layer=WindowManager&key=slash"]]
                [:right_shift [:hs "handle-karabiner?layer=WindowManager&key=right_shift"]]
            ]
        }
    ]
}

