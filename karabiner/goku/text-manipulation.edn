        {
            :des "Dialog Case Mode (Key: Z)"
            :rules [:dialog-case-mode
                [:y [:hs "dialogCase?to=upperFirst"]]
                [:u [:hs "dialogCase?to=upper"]]
                [:i [:hs "dialogCase?to=constant"]]
                [:o [:hs "dialogCase?to=kebab"]]
                [:p [:hs "dialogCase?to=pascal"]]

                [:h [:hs "dialogCase?to=title"]]
                [:j [:hs "dialogCase?to=sentence"]]
                [:k [:hs "dialogCase?to=snake"]]
                [:l [:hs "dialogCase?to=lower"]]

                [:m [:hs "dialogCase?to=camel"]]
                [:period [:hs "dialogCase?to=dot"]]
                [:slash [:hs "dialogCase?to=path"]]
            ]
        }
        {
            :des "Case Mode (Key: A)"
            :rules [:case-mode
                [:y [:hs "changeCase?to=upperFirst&key=y"]]
                [:u [:hs "changeCase?to=upper&key=u"]]
                [:i [:hs "changeCase?to=constant&key=i"]]
                [:o [:hs "changeCase?to=kebab&key=o"]]
                [:p [:hs "changeCase?to=pascal&key=p"]]

                [:h [:hs "changeCase?to=title&key=h"]]
                [:j [:hs "changeCase?to=sentence&key=j"]]
                [:k [:hs "changeCase?to=snake&key=k"]]
                [:l [:hs "changeCase?to=lower&key=l"]]

                [:m [:hs "changeCase?to=camel&key=m"]]
                [:period [:hs "changeCase?to=dot&key=."]]
                [:slash [:hs "changeCase?to=path&key=/"]]
            ]
        }
        {
            :des "Yank Mode (Key: Y)"
            :rules [:yank-mode
                [:e [:hs "yank-toEndOfWord"]]
                [:r [:hs "yank-relativeFilePath"]]

                [:w [:hs "yank-word"]]
                [:t [:escape :y :i :t]]; t -> tag
                [:s [:escape :y :i :quote]]; s -> single quotes
                [:d [:escape :y :i :!Squote]]; d -> double quotes
                [:z [:escape :y :i :z]]; z -> back ticks
                [:f [:escape :y :i :!S9]]; f -> parenthesis
                [:c [:escape :y :i :!Sopen_bracket]]; c -> braces
                [:b [:escape :y :i :open_bracket]]; b -> brackets

                [:a [:hs "yank-toEndOfLine"]]
                [:i [:hs "yank-toBeginningOfLine"]]
                [:v [:hs "yank-line"]]
                [:x [:hs "yank-character"]]

                [:caps_lock [:hs "yank-all"]]
            ]
        }
        {
            :des "Paste Mode (Key: P)"
            :rules [:paste-mode
                [:e [:hs "paste-toEndOfWord"]]

                [:w [:hs "paste-word"]]
                [:t [:escape :v :i :t :p]]; t -> tag
                [:s [:escape :v :i :quote :p]]; s -> single quotes
                [:d [:escape :v :i :!Squote :p]]; d -> double quotes
                [:z [:escape :v :i :z :p]]; z -> back ticks
                [:f [:escape :v :i :!S9 :p]]; f -> parenthesis
                [:c [:escape :v :i :!Sopen_bracket :p]]; c -> braces
                [:b [:escape :v :i :open_bracket :p]]; b -> brackets

                [:a [:hs "paste-toEndOfLine"]]
                [:i [:hs "paste-toBeginningOfLine"]]
                [:v [:hs "paste-line"]]
                [:x [:hs "paste-character"]]

                [:caps_lock [:alfred "paste:strip" "com.fuelingtheweb.old"]]
            ]
        }
        {
            :des "Change Mode (Key: n)"
            :rules [:change-mode
                [:e [:hs "change-toEndOfWord"]]

                [:w [:hs "change-word"]]
                [:t [:escape :c :i :t]]; t -> tag
                [:s [:escape :c :i :quote]]; s -> single quotes
                [:d [:escape :c :i :!Squote]]; d -> double quotes
                [:z [:escape :c :i :z]]; z -> back ticks
                [:f [:escape :c :i :!S9]]; f -> parenthesis
                [:c [:escape :c :i :!Sopen_bracket]]; c -> braces
                [:b [:escape :c :i :open_bracket]]; b -> brackets

                [:a [:hs "change-toEndOfLine"]]
                [:i [:hs "change-toBeginningOfLine"]]
                [:v [:hs "change-line"]]
                [:x [:hs "change-character"]]

                [:caps_lock [:hs "text-disableVim"]]
            ]
        }
        {
            :des "Destroy Mode (Key: [)"
            :rules [:destroy-mode
                [:e [:hs "destroy-toEndOfWord"]]

                [:w [:hs "destroy-word"]]
                [:t [:escape :d :i :t]]; t -> tag
                [:s [:escape :d :i :quote]]; s -> single quotes
                [:d [:escape :d :i :!Squote]]; d -> double quotes
                [:z [:escape :d :i :z]]; z -> back ticks
                [:f [:escape :d :i :!S9]]; f -> parenthesis
                [:c [:escape :d :i :!Sopen_bracket]]; c -> braces
                [:b [:escape :d :i :open_bracket]]; b -> brackets

                [:a [:hs "destroy-toEndOfLine"]]
                [:i [:hs "destroy-toBeginningOfLine"]]
                [:v [:hs "destroy-line"]]
                [:x [:hs "destroy-character"]]
                [:spacebar :delete_or_backspace]
            ]
        }
        {
            :des "Select Inside Mode (Key: i)"
            :rules [:select-inside-mode
                [:w [:hs "select-inside-word"]]
                [:t [:escape :v :i :t]]; t -> tag
                [:s [:escape :v :i :quote]]; s -> single quotes
                [:d [:escape :v :i :!Squote]]; d -> double quotes
                [:z [:escape :v :i :z]]; z -> back ticks
                [:f [:escape :v :i :!S9]]; f -> parenthesis
                [:c [:escape :v :i :!Sopen_bracket]]; c -> braces
                [:b [:escape :v :i :open_bracket]]; b -> brackets

                [:v [:hs "select-inside-line"]]
                [:x [:hs "select-inside-character"]]
            ]
        }
        {
            :des "Select Until Mode (Key: u)"
            :rules [:select-until-mode
                [:e [:hs "select-until-endOfWord"]]

                [:w [:hs "select-until-next-word"]]
                [:s [:v :t :quote]]; s -> single quotes
                [:d [:v :t :!Squote]]; d -> double quotes
                [:z [:v :t :!Ograve_accent_and_tilde]]; z -> back ticks

                ; opening / closing parenthesis
                [:f [:!S0 ["bracket-pending" 0]] ["bracket-pending" 1]]
                [:f
                    [:v :t ["bracket-pending" 1]]
                    ["bracket-pending" 0]
                    {:delayed {:invoked [:!S9 ["bracket-pending" 0]] :canceled ["bracket-pending" 0]} :params {:delay 150}}
                ]

                ; opening / closing braces
                [:c [:!Sclose_bracket ["bracket-pending" 0]] ["bracket-pending" 1]]
                [:c
                    [:v :t ["bracket-pending" 1]]
                    ["bracket-pending" 0]
                    {:delayed {:invoked [:!Sopen_bracket ["bracket-pending" 0]] :canceled ["bracket-pending" 0]} :params {:delay 150}}
                ]

                ; opening / closing brackets
                [:b [:close_bracket ["bracket-pending" 0]] ["bracket-pending" 1]]
                [:b
                    [:v :t ["bracket-pending" 1]]
                    ["bracket-pending" 0]
                    {:delayed {:invoked [:open_bracket ["bracket-pending" 0]] :canceled ["bracket-pending" 0]} :params {:delay 150}}
                ]

                [:a [:hs "select-until-endOfLine"]]
                [:i [:hs "select-until-beginningOfLine"]]
                [:t [:hs "select-until-previousBlock"]]
            ]
        }
        {
            :des "Jump to Mode (Key: return)"
            :rules [:jump-to-mode
                [:s [:f :quote]]; s -> single quotes
                [:d [:f :!Squote]]; d -> double quotes
                [:z [:f :!Ograve_accent_and_tilde]]; z -> back ticks

                ; opening / closing parenthesis
                [:f [:!S0 ["bracket-pending" 0]] ["bracket-pending" 1]]
                [:f
                    [:f ["bracket-pending" 1]]
                    ["bracket-pending" 0]
                    {:delayed {:invoked [:!S9 ["bracket-pending" 0]] :canceled ["bracket-pending" 0]} :params {:delay 150}}
                ]

                ; opening / closing braces
                [:c [:!Sclose_bracket ["bracket-pending" 0]] ["bracket-pending" 1]]
                [:c
                    [:f ["bracket-pending" 1]]
                    ["bracket-pending" 0]
                    {:delayed {:invoked [:!Sopen_bracket ["bracket-pending" 0]] :canceled ["bracket-pending" 0]} :params {:delay 150}}
                ]

                ; opening / closing brackets
                [:b [:close_bracket ["bracket-pending" 0]] ["bracket-pending" 1]]
                [:b
                    [:f ["bracket-pending" 1]]
                    ["bracket-pending" 0]
                    {:delayed {:invoked [:open_bracket ["bracket-pending" 0]] :canceled ["bracket-pending" 0]} :params {:delay 150}}
                ]

                [:t [:!Sopen_bracket]] ; Previous block
            ]
        }
