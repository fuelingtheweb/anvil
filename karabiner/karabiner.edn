; !  | means mandatory
; #  | means optional
; C  | left_command
; T  | left_control
; O  | left_option
; S  | left_shift
; F  | fn
; Q  | right_command
; W  | right_control
; E  | right_option
; R  | right_shift
; !! | mandatory command + control + option + shift (hyper)
; ## | optional any
{
    ; :simlayer-threshold 250
    :profiles {
        :Default {
            :default true
            :sim 20 ; simultaneous_threshold_milliseconds (def: 50)
            ; keys need to be pressed within this threshold to be considered simultaneous
            :delay 100 ; to_delayed_action_delay_milliseconds (def: 500)
            ; basically it means time after which the key press is count delayed
            :alone 1000 ; to_if_alone_timeout_milliseconds (def: 1000)
            ; hold for 995s and single tap registered; hold for 1005s and seen as modifier
            :held 100 ; to_if_held_down_threshold_milliseconds (def: 500)
            ; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)
        }
    }
    :layers {
        :HyperMode {:key :caps_lock :alone {:key :escape}}
    }
    :simlayers {
        :sim_tab {:key :tab}
        :sim_q {:key :q}
        ; w
        ; e
        :sim_r {:key :r}
        :sim_t {:key :t}
        :sim_y {:key :y}
        :sim_u {:key :u}
        :sim_i {:key :i}
        :sim_o {:key :o}
        :sim_p {:key :p}
        :sim_open_bracket {:key :open_bracket}
        :sim_close_bracket {:key :close_bracket}
        :sim_a {:key :a}
        :sim_s {:key :s}
        :sim_d {:key :d}
        :sim_f {:key :f}
        :sim_g {:key :g}
        :sim_semicolon {:key :semicolon}
        :sim_quote {:key :quote}
        :sim_z {:key :z}
        :sim_x {:key :x}
        :sim_c {:key :c}
        :sim_v {:key :v}
        ; b
        :sim_n {:key :n}
        :sim_m {:key :m}
        :sim_comma {:key :comma}
        :sim_period {:key :period}
        :sim_slash {:key :slash}
        :sim_spacebar {:key :spacebar}
    }
    :templates {
        :alfred "osascript -e 'tell application id \"com.runningwithcrayons.Alfred\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
        :open "open '%s'"
        :app "open -b '%s'"
        :hs "open -g 'hammerspoon://%s'"
        :hsk "open -g 'hammerspoon://handle-karabiner?mode=%s&key=%s'"
        :menu "osascript -e 'tell application \"System Events\" to tell process \"%s\" to click menu item \"%s\" of menu \"%s\" of menu bar 1'"
    }
    :applications {
        :alfred ["com.runningwithcrayons.Alfred"]
        :anybox ["cc.anybox.Anybox"]
        :arc ["company.thebrowser.Browser"]
        :busycal ["com.busymac.busycal-setapp"]
        :chrome ["com.google.Chrome"]
        :discord ["com.hnc.Discord"]
        :finder ["com.apple.finder"]
        :mimestream ["com.mimestream.Mimestream"]
        :obsidian ["md.obsidian"]
        :preview ["com.apple.Preview"]
        :ray ["be.spatie.ray"]
        :raycast ["com.raycast.macos"]
        :sidenotes ["com.apptorium.SideNotes-setapp"]
        :slack ["com.tinyspeck.slackmacgap"]
        :spotify ["com.spotify.client"]
        :tableplus ["com.tinyapp.TablePlus-setapp"]
        :tinkerwell ["de.beyondco.tinkerwell"]
        :vivaldi ["com.vivaldi.Vivaldi"]
        :vscode ["com.microsoft.VSCode"]
        :warp ["dev.warp.Warp-Stable"]
        :zen ["app.zen-browser.zen"]
        :zoom ["us.zoom.xos"]
        :teams ["com.microsoft.teams2"]
        :outlook ["com.microsoft.Outlook"]
        :calendar ["com.busymac.busycal-setapp"]
        :code ["com.microsoft.VSCode"]
        :mail ["com.mimestream.Mimestream"]
        :browser ["company.thebrowser.Browser" "com.google.Chrome" "com.vivaldi.Vivaldi" "app.zen-browser.zen"]
        :chat ["com.hnc.Discord" "com.tinyspeck.slackmacgap"]
        :ide ["com.microsoft.VSCode"]
        :quickfind ["com.runningwithcrayons.Alfred" "com.raycast.macos"]
        :terminal ["dev.warp.Warp-Stable"]
    }
    :main [
        ;; each manipulator has a description and multiple rules

        ;;{:des "..."                               ;; -> description
        ;; :rules[
        ;;          [<from>  <to>  <conditions> <other options>]    ;; -> rule 1
        ;;          [<from>  <to>  <conditions> <other options>]    ;; -> rule 2
        ;; ]}
        ;;
        ;; <from> can be keywords defined in froms or keycodes without {:not-from true}
        ;; <to> can be keywords defined in tos, keycodes without {:not-to true} or strings (shell script)
        ;; <conditions> can be keywords defined in layers, devices, applications
        ;; <other options> {:other {:parameters {:to_delayed_action_delay_milliseconds 100 :basic.to_if_alone_timeout_milliseconds 500 :basic.to_if_held_down_threshold_milliseconds 250}} }

        ;; if simplified modifier is used in <to>, optional(#) definition will be ignored.

        ;; (custom variables) & modifiers -> Advanced
        ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#custom-variable

        {
            :des "Misc"
            :rules [
                [:fn {:pkey :button1}] ; Mouse click. Hold for dragging
            ]
        }
        {
            :des "Hyper"
            :rules [:HyperMode
                [:y [:hsk "Hyper" "y"]]
                [:u [:hsk "Hyper" "u"]]
                [:i [:hsk "Hyper" "i"]]
                [:o [:hsk "Hyper" "o"]]
                [:p [:!SOCp] []]
                [:open_bracket [:!Ck] [:anybox]]
                [:open_bracket [:!Ct] [:arc]]
                [:open_bracket [:!SCp] [:ide]]
                [:open_bracket [:!Cp] [:obsidian]]
                [:open_bracket [:!Cp] [:warp]]
                [:open_bracket [:alfred "search" "com.tedwise.menubarsearch"] []]
                [:close_bracket [:hsk "Hyper" "close_bracket"]]
                [:h [:!Ck :return_or_enter] [:discord]]
                [:h [:escape] [:raycast]]
                [:h [:!OCleft_arrow] [:spotify]]
                [:h [:c :d :p :return_or_enter] [:terminal]]
                [:h [:!Copen_bracket] []]
                [:j [:hsk "Hyper" "j"]]
                [:k [:hsk "Hyper" "k"]]
                [:l [:hsk "Hyper" "l"]]
                [:semicolon [:hsk "Hyper" "semicolon"]]
                [:quote [:hsk "Hyper" "quote"]]
                [:return_or_enter [:caps_lock] []]
                [:n [:!OCn] [:ide]]
                [:n [:!SCn] []]
                [:m [:hsk "Hyper" "m"]]
                [:comma [:hsk "Hyper" "comma"]]
                [:period [:hsk "Hyper" "period"]]
                [:slash [:hsk "Hyper" "slash"]]
                [:right_shift [:hsk "Hyper" "right_shift"]]
                [:spacebar [:hsk "Hyper" "spacebar"]]
            ]
        }
        {
            :des "Tab"
            :rules [:sim_tab
                [:y [:hsk "Tab" "y"]]
                [:u [:hsk "Tab" "u"]]
                [:i [:!C1] []]
                [:o [:!C9] [:chrome]]
                [:o [:!T0] []]
                [:p [:!Ck :return_or_enter] [:ide]]
                [:p [:!TOCp] [:obsidian]]
                [:p [:!TOCp] [:vivaldi]]
                [:open_bracket [:t :x :h] [:chrome]]
                [:open_bracket [:!TOCe :!TOCopen_bracket] [:ide]]
                [:close_bracket [:t :x :l] [:chrome]]
                [:close_bracket [:!TOCe :!TOCclose_bracket] [:ide]]
                [:h [:escape :t :h] [:chrome]]
                [:h [:!SOCleft_arrow] [:ide]]
                [:h [:!OCleft_arrow] [:vivaldi]]
                [:j [:hs "Tab.previous"] []]
                [:k [:hs "Tab.next"] []]
                [:l [:escape :t :l] [:chrome]]
                [:l [:!SOCright_arrow] [:ide]]
                [:l [:!OCright_arrow] [:vivaldi]]
                [:semicolon [:hsk "Tab" "semicolon"]]
                [:quote [:hsk "Tab" "quote"]]
                [:return_or_enter [:!SCt] []]
                [:b [:hsk "Tab" "b"]]
                [:n [:!Cn] [:finder]]
                [:n [:!Cn :!So] [:ide]]
                [:n [:!Ct] []]
                [:m [:hs "Tab.closeCurrent"] []]
                [:comma [:hs "Tab.closePrevious"] []]
                [:period [:hs "Tab.closeNext"] []]
                [:slash [:t :x :semicolon] [:chrome]]
                [:slash [:!TOCe :!TOCslash] [:ide]]
                [:right_shift [:!TOCe :!TOCquote] [:ide]]
                [:spacebar [:!Ck :return_or_enter] [:ide]]
                [:spacebar [:!TOCp] [:obsidian]]
            ]
        }
        {
            :des "Pane"
            :rules [:sim_q
                [:y [:hsk "Pane" "y"]]
                [:u [:hsk "Pane" "u"]]
                [:i [:hsk "Pane" "i"]]
                [:o [:hsk "Pane" "o"]]
                [:p [:hsk "Pane" "p"]]
                [:open_bracket [:hsk "Pane" "open_bracket"]]
                [:close_bracket [:hsk "Pane" "close_bracket"]]
                [:h [:hsk "Pane" "h"]]
                [:j [:hsk "Pane" "j"]]
                [:k [:hsk "Pane" "k"]]
                [:l [:hsk "Pane" "l"]]
                [:semicolon [:hsk "Pane" "semicolon"]]
                [:quote [:hsk "Pane" "quote"]]
                [:return_or_enter [:hsk "Pane" "return_or_enter"]]
                [:b [:hsk "Pane" "b"]]
                [:n [:hsk "Pane" "n"]]
                [:m [:hsk "Pane" "m"]]
                [:comma [:hsk "Pane" "comma"]]
                [:period [:hsk "Pane" "period"]]
                [:slash [:hsk "Pane" "slash"]]
                [:right_shift [:hsk "Pane" "right_shift"]]
                [:spacebar [:hsk "Pane" "spacebar"]]
            ]
        }


        {
            :des "Calculator"
            :rules [:sim_r
                [:b [:comma] []]
                [:y [:!S8] []]
                [:u [:1] []]
                [:i [:2] []]
                [:o [:3] []]
                [:p [:!S5] []]
                [:open_bracket [:delete_or_backspace] []]
                [:close_bracket [:!Ssemicolon] []]
                [:h [:!Sequal_sign] []]
                [:j [:4] []]
                [:k [:5] []]
                [:l [:6] []]
                [:semicolon [:0] []]
                [:quote [:equal_sign] []]
                [:return_or_enter [:return_or_enter] []]
                [:n [:hyphen] []]
                [:m [:7] []]
                [:comma [:8] []]
                [:period [:9] []]
                [:slash [:slash] []]
                [:right_shift [:tab] []]
                [:spacebar [:period] []]
            ]
        }
        {
            :des "Test"
            :rules [:sim_t
                [:y [:hsk "Test" "y"]]
                [:u [:hsk "Test" "u"]]
                [:i [:hsk "Test" "i"]]
                [:o [:hsk "Test" "o"]]
                [:p [:hsk "Test" "p"]]
                [:open_bracket [:hsk "Test" "open_bracket"]]
                [:close_bracket [:hsk "Test" "close_bracket"]]
                [:h [:hsk "Test" "h"]]
                [:j [:hsk "Test" "j"]]
                [:k [:hsk "Test" "k"]]
                [:l [:hsk "Test" "l"]]
                [:semicolon [:hsk "Test" "semicolon"]]
                [:quote [:hsk "Test" "quote"]]
                [:return_or_enter [:hsk "Test" "return_or_enter"]]
                [:b [:hsk "Test" "b"]]
                [:n [:hsk "Test" "n"]]
                [:m [:hsk "Test" "m"]]
                [:comma [:hsk "Test" "comma"]]
                [:period [:hsk "Test" "period"]]
                [:slash [:hsk "Test" "slash"]]
                [:right_shift [:hsk "Test" "right_shift"]]
                [:spacebar [:hsk "Test" "spacebar"]]
            ]
        }
        {
            :des "Yank"
            :rules [:sim_y
                [:tab [:hsk "Yank" "tab"]]
                [:q [:hsk "Yank" "q"]]
                [:w [:hsk "Yank" "w"]]
                [:e [:hsk "Yank" "e"]]
                [:r [:hsk "Yank" "r"]]
                [:t [:hsk "Yank" "t"]]
                [:caps_lock [:hsk "Yank" "caps_lock"]]
                [:a [:hsk "Yank" "a"]]
                [:s [:hsk "Yank" "s"]]
                [:d [:hsk "Yank" "d"]]
                [:f [:hsk "Yank" "f"]]
                [:g [:hsk "Yank" "g"]]
                [:left_shift [:hsk "Yank" "left_shift"]]
                [:z [:hsk "Yank" "z"]]
                [:x [:hsk "Yank" "x"]]
                [:c [:hsk "Yank" "c"]]
                [:v [:hsk "Yank" "v"]]
                [:b [:hsk "Yank" "b"]]
                [:spacebar [:hsk "Yank" "spacebar"]]
            ]
        }
        {
            :des "AppShortcut"
            :rules [:sim_u
                [:1 [:hsk "AppShortcut" "1"]]
                [:2 [:hsk "AppShortcut" "2"]]
                [:3 [:hsk "AppShortcut" "3"]]
                [:4 [:hsk "AppShortcut" "4"]]
                [:5 [:hsk "AppShortcut" "5"]]
                [:6 [:hsk "AppShortcut" "6"]]
                [:7 [:hsk "AppShortcut" "7"]]
                [:8 [:hsk "AppShortcut" "8"]]
                [:9 [:hsk "AppShortcut" "9"]]
                [:0 [:hsk "AppShortcut" "0"]]
                [:tab [:hsk "AppShortcut" "tab"]]
                [:q [:hsk "AppShortcut" "q"]]
                [:w [:hsk "AppShortcut" "w"]]
                [:e [:hsk "AppShortcut" "e"]]
                [:r [:hsk "AppShortcut" "r"]]
                [:t [:hsk "AppShortcut" "t"]]
                [:y [:hsk "AppShortcut" "y"]]
                [:i [:hsk "AppShortcut" "i"]]
                [:o [:hsk "AppShortcut" "o"]]
                [:p [:hsk "AppShortcut" "p"]]
                [:open_bracket [:hsk "AppShortcut" "open_bracket"]]
                [:close_bracket [:hsk "AppShortcut" "close_bracket"]]
                [:caps_lock [:hsk "AppShortcut" "caps_lock"]]
                [:a [:hsk "AppShortcut" "a"]]
                [:s [:hsk "AppShortcut" "s"]]
                [:d [:hsk "AppShortcut" "d"]]
                [:f [:hsk "AppShortcut" "f"]]
                [:g [:hsk "AppShortcut" "g"]]
                [:h [:hsk "AppShortcut" "h"]]
                [:j [:hsk "AppShortcut" "j"]]
                [:k [:hsk "AppShortcut" "k"]]
                [:l [:hsk "AppShortcut" "l"]]
                [:semicolon [:hsk "AppShortcut" "semicolon"]]
                [:quote [:hsk "AppShortcut" "quote"]]
                [:return_or_enter [:hsk "AppShortcut" "return_or_enter"]]
                [:left_shift [:hsk "AppShortcut" "left_shift"]]
                [:z [:hsk "AppShortcut" "z"]]
                [:x [:hsk "AppShortcut" "x"]]
                [:c [:hsk "AppShortcut" "c"]]
                [:v [:hsk "AppShortcut" "v"]]
                [:b [:hsk "AppShortcut" "b"]]
                [:n [:hsk "AppShortcut" "n"]]
                [:m [:hsk "AppShortcut" "m"]]
                [:comma [:hsk "AppShortcut" "comma"]]
                [:period [:hsk "AppShortcut" "period"]]
                [:slash [:hsk "AppShortcut" "slash"]]
                [:right_shift [:hsk "AppShortcut" "right_shift"]]
                [:spacebar [:hsk "AppShortcut" "spacebar"]]
            ]
        }
        {
            :des "Make"
            :rules [:sim_i
                [:tab [:hsk "Make" "tab"]]
                [:q [:hsk "Make" "q"]]
                [:w [:hsk "Make" "w"]]
                [:e [:hsk "Make" "e"]]
                [:r [:hsk "Make" "r"]]
                [:t [:hsk "Make" "t"]]
                [:caps_lock [:hsk "Make" "caps_lock"]]
                [:a [:hsk "Make" "a"]]
                [:s [:hsk "Make" "s"]]
                [:d [:hsk "Make" "d"]]
                [:f [:hsk "Make" "f"]]
                [:g [:hsk "Make" "g"]]
                [:left_shift [:hsk "Make" "left_shift"]]
                [:z [:hsk "Make" "z"]]
                [:x [:hsk "Make" "x"]]
                [:c [:hsk "Make" "c"]]
                [:v [:hsk "Make" "v"]]
                [:b [:hsk "Make" "b"]]
                [:spacebar [:hsk "Make" "spacebar"]]
            ]
        }
        {
            :des "Open"
            :rules [:sim_o
                [:1 [:hsk "Open" "1"]]
                [:2 [:hsk "Open" "2"]]
                [:3 [:hsk "Open" "3"]]
                [:4 [:hsk "Open" "4"]]
                [:5 [:hsk "Open" "5"]]
                [:6 [:hsk "Open" "6"]]
                [:7 [:hsk "Open" "7"]]
                [:8 [:hsk "Open" "8"]]
                [:9 [:hsk "Open" "9"]]
                [:0 [:hsk "Open" "0"]]
                [:tab [:hsk "Open" "tab"]]
                [:q [:hsk "Open" "q"]]
                [:w [:hsk "Open" "w"]]
                [:e [:hsk "Open" "e"]]
                [:r [:hsk "Open" "r"]]
                [:t [:hsk "Open" "t"]]
                [:y [:hsk "Open" "y"]]
                [:u [:hsk "Open" "u"]]
                [:i [:hsk "Open" "i"]]
                [:p [:hsk "Open" "p"]]
                [:open_bracket [:hsk "Open" "open_bracket"]]
                [:close_bracket [:hsk "Open" "close_bracket"]]
                [:caps_lock [:hsk "Open" "caps_lock"]]
                [:a [:hsk "Open" "a"]]
                [:s [:hsk "Open" "s"]]
                [:d [:hsk "Open" "d"]]
                [:f [:hsk "Open" "f"]]
                [:g [:hsk "Open" "g"]]
                [:h [:hsk "Open" "h"]]
                [:j [:hsk "Open" "j"]]
                [:k [:hsk "Open" "k"]]
                [:l [:hsk "Open" "l"]]
                [:semicolon [:hsk "Open" "semicolon"]]
                [:quote [:hsk "Open" "quote"]]
                [:return_or_enter [:hsk "Open" "return_or_enter"]]
                [:left_shift [:hsk "Open" "left_shift"]]
                [:z [:hsk "Open" "z"]]
                [:x [:hsk "Open" "x"]]
                [:c [:hsk "Open" "c"]]
                [:v [:hsk "Open" "v"]]
                [:b [:hsk "Open" "b"]]
                [:n [:hsk "Open" "n"]]
                [:m [:hsk "Open" "m"]]
                [:comma [:hsk "Open" "comma"]]
                [:period [:hsk "Open" "period"]]
                [:slash [:hsk "Open" "slash"]]
                [:right_shift [:hsk "Open" "right_shift"]]
                [:spacebar [:hsk "Open" "spacebar"]]
            ]
        }
        {
            :des "Paste"
            :rules [:sim_p
                [:tab [:hsk "Paste" "tab"]]
                [:q [:hsk "Paste" "q"]]
                [:w [:hsk "Paste" "w"]]
                [:e [:hsk "Paste" "e"]]
                [:r [:hsk "Paste" "r"]]
                [:t [:hsk "Paste" "t"]]
                [:caps_lock [:hsk "Paste" "caps_lock"]]
                [:a [:hsk "Paste" "a"]]
                [:s [:hsk "Paste" "s"]]
                [:d [:hsk "Paste" "d"]]
                [:f [:hsk "Paste" "f"]]
                [:g [:hsk "Paste" "g"]]
                [:left_shift [:hsk "Paste" "left_shift"]]
                [:z [:hsk "Paste" "z"]]
                [:x [:hsk "Paste" "x"]]
                [:c [:hsk "Paste" "c"]]
                [:v [:hsk "Paste" "v"]]
                [:b [:hsk "Paste" "b"]]
                [:spacebar [:hsk "Paste" "spacebar"]]
            ]
        }
        {
            :des "Secondary"
            :rules [:sim_open_bracket
                [:tab [:hsk "Secondary" "tab"]]
                [:q [:hsk "Secondary" "q"]]
                [:w [:hsk "Secondary" "w"]]
                [:e [:hsk "Secondary" "e"]]
                [:r [:hsk "Secondary" "r"]]
                [:t [:hsk "Secondary" "t"]]
                [:caps_lock [:hsk "Secondary" "caps_lock"]]
                [:a [:hsk "Secondary" "a"]]
                [:s [:hsk "Secondary" "s"]]
                [:d [:hsk "Secondary" "d"]]
                [:f [:hsk "Secondary" "f"]]
                [:g [:hsk "Secondary" "g"]]
                [:left_shift [:hsk "Secondary" "left_shift"]]
                [:z [:hsk "Secondary" "z"]]
                [:x [:hsk "Secondary" "x"]]
                [:c [:hsk "Secondary" "c"]]
                [:v [:hsk "Secondary" "v"]]
                [:b [:hsk "Secondary" "b"]]
                [:spacebar [:hsk "Secondary" "spacebar"]]
            ]
        }
        {
            :des "Tertiary"
            :rules [:sim_close_bracket
                [:tab [:hsk "Tertiary" "tab"]]
                [:q [:hsk "Tertiary" "q"]]
                [:w [:hsk "Tertiary" "w"]]
                [:e [:hsk "Tertiary" "e"]]
                [:r [:open "raycast://extensions/raycast/system/restart"] []]
                [:t [:hsk "Tertiary" "t"]]
                [:caps_lock [:hsk "Tertiary" "caps_lock"]]
                [:a [:hsk "Tertiary" "a"]]
                [:s [:open "raycast://extensions/raycast/system/shut-down"] []]
                [:d [:hsk "Tertiary" "d"]]
                [:f [:hsk "Tertiary" "f"]]
                [:g [:hsk "Tertiary" "g"]]
                [:left_shift [:hsk "Tertiary" "left_shift"]]
                [:z [:hsk "Tertiary" "z"]]
                [:x [:!SCx] [:ide]]
                [:c [:hsk "Tertiary" "c"]]
                [:v [:hsk "Tertiary" "v"]]
                [:b [:hsk "Tertiary" "b"]]
                [:spacebar [:hsk "Tertiary" "spacebar"]]
            ]
        }
        {
            :des "ChangeCase"
            :rules [:sim_a
                [:y [:hsk "ChangeCase" "y"]]
                [:u [:hsk "ChangeCase" "u"]]
                [:i [:hsk "ChangeCase" "i"]]
                [:o [:hsk "ChangeCase" "o"]]
                [:p [:hsk "ChangeCase" "p"]]
                [:open_bracket [:hsk "ChangeCase" "open_bracket"]]
                [:close_bracket [:hsk "ChangeCase" "close_bracket"]]
                [:h [:hsk "ChangeCase" "h"]]
                [:j [:hsk "ChangeCase" "j"]]
                [:k [:hsk "ChangeCase" "k"]]
                [:l [:hsk "ChangeCase" "l"]]
                [:semicolon [:hsk "ChangeCase" "semicolon"]]
                [:quote [:hsk "ChangeCase" "quote"]]
                [:return_or_enter [:hsk "ChangeCase" "return_or_enter"]]
                [:b [:hsk "ChangeCase" "b"]]
                [:n [:hsk "ChangeCase" "n"]]
                [:m [:hsk "ChangeCase" "m"]]
                [:comma [:hsk "ChangeCase" "comma"]]
                [:period [:hsk "ChangeCase" "period"]]
                [:slash [:hsk "ChangeCase" "slash"]]
                [:right_shift [:hsk "ChangeCase" "right_shift"]]
                [:spacebar [:hsk "ChangeCase" "spacebar"]]
            ]
        }
        {
            :des "DefaultSnippets"
            :rules [:sim_s
                [:d [:d :d :!S9 :!S0 :semicolon :left_arrow :left_arrow] []]
                [:e [:e :l :s :e :i :f] []]
                [:t [:!S4 :t :h :i :s :hyphen :!Speriod] []]
                [:y [:spacebar :!S7 :!S7 :spacebar] []]
                [:u [:hsk "DefaultSnippets" "u"]]
                [:i [:i :f :spacebar :!S9 :!S0 :spacebar :!Sopen_bracket :!Sclose_bracket :left_arrow] []]
                [:o [:spacebar :!Sequal_sign :spacebar] []]
                [:p [:spacebar :!Sbackslash :!Sbackslash :spacebar] []]
                [:open_bracket [:e :c :h :o] []]
                [:close_bracket [:hsk "DefaultSnippets" "close_bracket"]]
                [:h [:hsk "DefaultSnippets" "h"]]
                [:j [:hsk "DefaultSnippets" "j"]]
                [:k [:hsk "DefaultSnippets" "k"]]
                [:l [:c :o :n :s :o :l :e :period :l :o :g :!S9 :!S0 :left_arrow] []]
                [:semicolon [:spacebar :!Ssemicolon :spacebar] []]
                [:quote [:equal_sign] []]
                [:return_or_enter [:r :e :t :u :r :n] []]
                [:n [:hsk "DefaultSnippets" "n"]]
                [:m [:hsk "DefaultSnippets" "m"]]
                [:comma [:comma :spacebar] []]
                [:period [:hsk "DefaultSnippets" "period"]]
                [:slash [:spacebar :!Sslash :spacebar] []]
                [:right_shift [:hsk "DefaultSnippets" "right_shift"]]
                [:spacebar [:hsk "DefaultSnippets" "spacebar"]]
            ]
        }
        {
            :des "Vi"
            :rules [:sim_d
                [:y [:hs "vi.moveToTopOfPage"] []]
                [:u [:!Tu] [:ide]]
                [:u [:page_up] []]
                [:i [:!Cleft_arrow] []]
                [:o [:!Cright_arrow] []]
                [:p [:hsk "Vi" "p"]]
                [:open_bracket [:escape :!Si] [:ide]]
                [:open_bracket [:!Cleft_arrow] []]
                [:close_bracket [:escape :!Sa] [:ide]]
                [:close_bracket [:!Cright_arrow] []]
                [:h [:left_arrow] []]
                [:j [:down_arrow] []]
                [:k [:up_arrow] []]
                [:l [:right_arrow] []]
                [:semicolon [:escape :!Sb] []]
                [:quote [:escape :!Se] []]
                [:return_or_enter [:escape :!Sw] []]
                [:n [:hs "vi.moveToBottomOfPage"] []]
                [:m [:!Td] [:ide]]
                [:m [:page_down] []]
                [:comma [:!Oleft_arrow] []]
                [:period [:!Oright_arrow] []]
                [:slash [:!Sq] []]
                [:right_shift [:q] []]
                [:spacebar [:escape :!Sj :x] [:ide]]
            ]
        }
        {
            :des "General"
            :rules [:sim_f
                [:y [:!S7] []]
                [:u [:!Shyphen] []]
                [:i [:hyphen] []]
                [:o [:spacebar :hyphen :spacebar] []]
                [:p [:!Sbackslash] []]
                [:open_bracket [:!Sopen_bracket] []]
                [:close_bracket [:!Sclose_bracket] []]
                [:h [:!S3] []]
                [:j [:!S2] []]
                [:k [:!S4] []]
                [:l [:hyphen :spacebar] []]
                [:semicolon [:!S9] []]
                [:quote [:!S0] []]
                [:return_or_enter [:hsk "General" "return_or_enter"]]
                [:n [:!S1] []]
                [:m [:hs "CodeSnippets.null"] []]
                [:comma [:grave_accent_and_tilde] []]
                [:period [:hyphen :!Speriod] []]
                [:slash [:!Sgrave_accent_and_tilde] []]
                [:right_shift [:!S6] []]
                [:spacebar [:hsk "General" "spacebar"]]
            ]
        }
        {
            :des "Git"
            :rules [:sim_g
                [:y [:g :b :c :return_or_enter] [:terminal]]
                [:u [:!OCu] [:browser]]
                [:u [:n :a :h] [:terminal]]
                [:i [:g :i :t :!Ssemicolon :c :h :e :c :k :o :u :t :period :i :n :c :l :u :d :e :hyphen :a :l :l :return_or_enter] [:terminal]]
                [:o [:g :i :t :!Ssemicolon :c :h :e :c :k :o :u :t :return_or_enter] [:terminal]]
                [:p [:!TOCg :!TOCp] [:ide]]
                [:p [:g :d :return_or_enter] [:terminal]]
                [:open_bracket [:!TOCg :!OCopen_bracket] [:code]]
                [:open_bracket [:g :m :m :return_or_enter] [:terminal]]
                [:close_bracket [:g :r :m :return_or_enter] [:terminal]]
                [:h [:g :i :t :!Ssemicolon :s :t :a :t :u :s :period :w :i :t :h :hyphen :s :u :m :m :a :r :y :return_or_enter] [:terminal]]
                [:j [:!TOCg :!OCj] [:code]]
                [:j [:g :r :s :return_or_enter] [:terminal]]
                [:k [:!TOCg :!OCk] [:code]]
                [:k [:g :i :t :!Ssemicolon :c :o :m :m :i :t :spacebar :quote :quote :left_arrow] [:terminal]]
                [:l [:!SOCg :!SOCh] [:ide]]
                [:l [:g :i :t :!Ssemicolon :l :o :g :return_or_enter] [:terminal]]
                [:l [:!SCl] [:vivaldi]]
                [:semicolon [:g :u :m :return_or_enter] [:terminal]]
                [:quote [:g :o :m :l :return_or_enter] [:terminal]]
                [:return_or_enter [:!TOCg :!OCclose_bracket] [:code]]
                [:return_or_enter [:g :a :a :return_or_enter] [:terminal]]
                [:n [:grave_accent_and_tilde :grave_accent_and_tilde :grave_accent_and_tilde :s :u :g :g :e :s :t :i :o :n :return_or_enter :return_or_enter :grave_accent_and_tilde :grave_accent_and_tilde :grave_accent_and_tilde :up_arrow] [:code]]
                [:n [:g :i :t :!Ssemicolon :b :r :a :n :c :h :period :n :e :w :spacebar :quote :quote :left_arrow] [:terminal]]
                [:m [:!TOCg :!TOCm] [:ide]]
                [:m [:g :i :t :!Ssemicolon :b :r :a :n :c :h :period :d :e :l :e :t :e :return_or_enter] [:terminal]]
                [:comma [:!OCi] [:browser]]
                [:comma [:g :i :t :spacebar :p :u :l :l :return_or_enter] [:terminal]]
                [:period [:!TOCg :!TOCj] [:code]]
                [:period [:g :i :t :spacebar :p :u :s :h :return_or_enter] [:terminal]]
                [:slash [:g :i :t :spacebar :s :t :a :s :h :spacebar :hyphen :u :spacebar :hyphen :m :spacebar :quote :quote :left_arrow] [:terminal]]
                [:right_shift [:g :s :t :p :return_or_enter] [:terminal]]
                [:spacebar [:!SOCg :!SOCspacebar] [:ide]]
            ]
        }
        {
            :des "Command"
            :rules [:sim_semicolon
                [:tab [:!Stab] []]
                [:q [:hsk "Command" "q"]]
                [:w [:hsk "Command" "w"]]
                [:e [:hsk "Command" "e"]]
                [:r [:!SOCr] [:ide]]
                [:r [:up_arrow :return_or_enter] [:terminal]]
                [:r [:!Tl :!Cr] [:tinkerwell]]
                [:r [:!Cr] []]
                [:t [:hsk "Command" "t"]]
                [:caps_lock [:alfred "commands" "com.fuelingtheweb.commands"] []]
                [:a [:!OCbackslash] []]
                [:s [:!Or] [:arc]]
                [:s [:!Cs :escape] [:ide]]
                [:s [:!Ssemicolon :x :return_or_enter] [:terminal]]
                [:s [:!Cs] []]
                [:d [:hsk "Command" "d"]]
                [:f [:hsk "Command" "f"]]
                [:g [:hsk "Command" "g"]]
                [:left_shift [:hsk "Command" "left_shift"]]
                [:z [:hsk "Command" "z"]]
                [:x [:!S3] [:arc]]
                [:x [:!Cdelete_or_backspace] [:anybox]]
                [:x [:!Cdelete_or_backspace] [:finder]]
                [:x [:!SCdelete_or_backspace] [:ide]]
                [:x [:!SCdelete_or_backspace] [:obsidian]]
                [:x [:!Tc] [:terminal]]
                [:x [:delete_or_backspace] []]
                [:c [:hsk "Command" "c"]]
                [:v [:hsk "Command" "v"]]
                [:b [:hsk "Command" "b"]]
                [:spacebar [:hsk "Command" "spacebar"]]
            ]
        }
        {
            :des "ExtendedCommand"
            :rules [:sim_quote
                [:tab [:hsk "ExtendedCommand" "tab"]]
                [:q [:hsk "ExtendedCommand" "q"]]
                [:w [:hsk "ExtendedCommand" "w"]]
                [:e [:hsk "ExtendedCommand" "e"]]
                [:r [:hsk "ExtendedCommand" "r"]]
                [:t [:hsk "ExtendedCommand" "t"]]
                [:caps_lock [:app "md.obsidian"] []]
                [:a [:hsk "ExtendedCommand" "a"]]
                [:s [:!SC5] []]
                [:d [:hsk "ExtendedCommand" "d"]]
                [:f [:!SCbackslash] []]
                [:g [:hsk "ExtendedCommand" "g"]]
                [:left_shift [:hsk "ExtendedCommand" "left_shift"]]
                [:z [:hsk "ExtendedCommand" "z"]]
                [:x [:hsk "ExtendedCommand" "x"]]
                [:c [:hsk "ExtendedCommand" "c"]]
                [:v [:hsk "ExtendedCommand" "v"]]
                [:b [:hsk "ExtendedCommand" "b"]]
                [:spacebar [:hsk "ExtendedCommand" "spacebar"]]
            ]
        }
        {
            :des "CaseDialog"
            :rules [:sim_z
                [:y [:hsk "CaseDialog" "y"]]
                [:u [:hsk "CaseDialog" "u"]]
                [:i [:hsk "CaseDialog" "i"]]
                [:o [:hsk "CaseDialog" "o"]]
                [:p [:hsk "CaseDialog" "p"]]
                [:open_bracket [:hsk "CaseDialog" "open_bracket"]]
                [:close_bracket [:hsk "CaseDialog" "close_bracket"]]
                [:h [:hsk "CaseDialog" "h"]]
                [:j [:hsk "CaseDialog" "j"]]
                [:k [:hsk "CaseDialog" "k"]]
                [:l [:hsk "CaseDialog" "l"]]
                [:semicolon [:hsk "CaseDialog" "semicolon"]]
                [:quote [:hsk "CaseDialog" "quote"]]
                [:return_or_enter [:hsk "CaseDialog" "return_or_enter"]]
                [:b [:hsk "CaseDialog" "b"]]
                [:n [:hsk "CaseDialog" "n"]]
                [:m [:hsk "CaseDialog" "m"]]
                [:comma [:hsk "CaseDialog" "comma"]]
                [:period [:hsk "CaseDialog" "period"]]
                [:slash [:hsk "CaseDialog" "slash"]]
                [:right_shift [:hsk "CaseDialog" "right_shift"]]
                [:spacebar [:hsk "CaseDialog" "spacebar"]]
            ]
        }
        {
            :des "Execute"
            :rules [:sim_x
                [:y [:hsk "Execute" "y"]]
                [:u [:hsk "Execute" "u"]]
                [:i [:hsk "Execute" "i"]]
                [:o [:hsk "Execute" "o"]]
                [:p [:hsk "Execute" "p"]]
                [:open_bracket [:hsk "Execute" "open_bracket"]]
                [:close_bracket [:hsk "Execute" "close_bracket"]]
                [:h [:hsk "Execute" "h"]]
                [:j [:hsk "Execute" "j"]]
                [:k [:hsk "Execute" "k"]]
                [:l [:hsk "Execute" "l"]]
                [:semicolon [:hsk "Execute" "semicolon"]]
                [:quote [:hsk "Execute" "quote"]]
                [:return_or_enter [:hsk "Execute" "return_or_enter"]]
                [:b [:hsk "Execute" "b"]]
                [:n [:hsk "Execute" "n"]]
                [:m [:hsk "Execute" "m"]]
                [:comma [:hsk "Execute" "comma"]]
                [:period [:hsk "Execute" "period"]]
                [:slash [:hsk "Execute" "slash"]]
                [:right_shift [:hsk "Execute" "right_shift"]]
                [:spacebar [:hsk "Execute" "spacebar"]]
            ]
        }
        {
            :des "Code"
            :rules [:sim_c
                [:y [:!Ck :!Ci] []]
                [:u [:!TOi] []]
                [:i [:!SCperiod] []]
                [:o [:!OCdown_arrow] []]
                [:p [:!TOCc :!TOCw] []]
                [:open_bracket [:!OCopen_bracket] []]
                [:close_bracket [:!OCclose_bracket] []]
                [:h [:!SOCup_arrow] []]
                [:j [:!TCdown_arrow] []]
                [:k [:!TCup_arrow] []]
                [:l [:!SOCdown_arrow] []]
                [:semicolon [:!Osemicolon] []]
                [:quote [:!Obackslash] []]
                [:return_or_enter [:!TCg] []]
                [:n [:!Cd] []]
                [:m [:!STOdown_arrow] []]
                [:comma [:!Ocomma] []]
                [:period [:spacebar :equal_sign :!Speriod :spacebar] []]
                [:slash [:!SOCm] []]
                [:right_shift [:!Tm] []]
                [:spacebar [:!Cslash] []]
            ]
        }
        {
            :des "ViVisual"
            :rules [:sim_v
                [:y [:escape :!Sv :g :g] [:code]]
                [:y [:!SOup_arrow] [:finder]]
                [:y [:!SCup_arrow] []]
                [:u [:!Sv :k] [:code]]
                [:u [:!Sup_arrow] []]
                [:i [:hs "SelectUntil.beginningOfLine"] []]
                [:o [:!Tv :!S4 :left_arrow] [:code]]
                [:o [:!SCright_arrow] []]
                [:p [:hsk "ViVisual" "p"]]
                [:open_bracket [:hsk "ViVisual" "open_bracket"]]
                [:close_bracket [:hsk "ViVisual" "close_bracket"]]
                [:h [:!Tv :left_arrow] [:code]]
                [:h [:!Sleft_arrow] []]
                [:j [:!Tv :!Tdown_arrow] [:code]]
                [:j [:!Sdown_arrow] []]
                [:k [:!Tv :!Tup_arrow] [:code]]
                [:k [:!Sup_arrow] []]
                [:l [:!Tv :right_arrow] [:code]]
                [:l [:!Sright_arrow] []]
                [:semicolon [:!Tv :!Sb] [:code]]
                [:quote [:!Tv :!Se] [:code]]
                [:return_or_enter [:!Tv :l :!Sw :h] [:code]]
                [:n [:escape :!Sv :!Sg] [:code]]
                [:n [:!SOdown_arrow] [:finder]]
                [:n [:!SCdown_arrow] []]
                [:m [:!Sv :j] [:code]]
                [:m [:!Sdown_arrow] []]
                [:comma [:!SOleft_arrow] []]
                [:period [:!SOright_arrow] []]
                [:slash [:hsk "ViVisual" "slash"]]
                [:right_shift [:hsk "ViVisual" "right_shift"]]
                [:spacebar [:hsk "ViVisual" "spacebar"]]
            ]
        }

        {
            :des "Change"
            :rules [:sim_n
                [:tab [:hsk "Change" "tab"]]
                [:q [:hsk "Change" "q"]]
                [:w [:hsk "Change" "w"]]
                [:e [:hsk "Change" "e"]]
                [:r [:hsk "Change" "r"]]
                [:t [:hsk "Change" "t"]]
                [:caps_lock [:hsk "Change" "caps_lock"]]
                [:a [:hsk "Change" "a"]]
                [:s [:hsk "Change" "s"]]
                [:d [:hsk "Change" "d"]]
                [:f [:hsk "Change" "f"]]
                [:g [:hsk "Change" "g"]]
                [:left_shift [:hsk "Change" "left_shift"]]
                [:z [:hsk "Change" "z"]]
                [:x [:hsk "Change" "x"]]
                [:c [:hsk "Change" "c"]]
                [:v [:hsk "Change" "v"]]
                [:b [:hsk "Change" "b"]]
                [:spacebar [:hsk "Change" "spacebar"]]
            ]
        }
        {
            :des "Destroy"
            :rules [:sim_m
                [:tab [:hsk "Destroy" "tab"]]
                [:q [:hsk "Destroy" "q"]]
                [:w [:hsk "Destroy" "w"]]
                [:e [:hsk "Destroy" "e"]]
                [:r [:hsk "Destroy" "r"]]
                [:t [:hsk "Destroy" "t"]]
                [:caps_lock [:hsk "Destroy" "caps_lock"]]
                [:a [:hsk "Destroy" "a"]]
                [:s [:hsk "Destroy" "s"]]
                [:d [:hsk "Destroy" "d"]]
                [:f [:hsk "Destroy" "f"]]
                [:g [:hsk "Destroy" "g"]]
                [:left_shift [:hsk "Destroy" "left_shift"]]
                [:z [:hsk "Destroy" "z"]]
                [:x [:hsk "Destroy" "x"]]
                [:c [:hsk "Destroy" "c"]]
                [:v [:hsk "Destroy" "v"]]
                [:b [:hsk "Destroy" "b"]]
                [:spacebar [:hsk "Destroy" "spacebar"]]
            ]
        }
        {
            :des "SelectInside"
            :rules [:sim_comma
                [:tab [:hsk "SelectInside" "tab"]]
                [:q [:hsk "SelectInside" "q"]]
                [:w [:hsk "SelectInside" "w"]]
                [:e [:hsk "SelectInside" "e"]]
                [:r [:hsk "SelectInside" "r"]]
                [:t [:hsk "SelectInside" "t"]]
                [:caps_lock [:hsk "SelectInside" "caps_lock"]]
                [:a [:hsk "SelectInside" "a"]]
                [:s [:hsk "SelectInside" "s"]]
                [:d [:hsk "SelectInside" "d"]]
                [:f [:hsk "SelectInside" "f"]]
                [:g [:hsk "SelectInside" "g"]]
                [:left_shift [:hsk "SelectInside" "left_shift"]]
                [:z [:hsk "SelectInside" "z"]]
                [:x [:hsk "SelectInside" "x"]]
                [:c [:hsk "SelectInside" "c"]]
                [:v [:hsk "SelectInside" "v"]]
                [:b [:hsk "SelectInside" "b"]]
                [:spacebar [:hsk "SelectInside" "spacebar"]]
            ]
        }
        {
            :des "SelectUntil"
            :rules [:sim_period
                [:tab [:hsk "SelectUntil" "tab"]]
                [:q [:hsk "SelectUntil" "q"]]
                [:w [:hsk "SelectUntil" "w"]]
                [:e [:hsk "SelectUntil" "e"]]
                [:r [:hsk "SelectUntil" "r"]]
                [:t [:hsk "SelectUntil" "t"]]
                [:caps_lock [:hsk "SelectUntil" "caps_lock"]]
                [:a [:hsk "SelectUntil" "a"]]
                [:s [:hsk "SelectUntil" "s"]]
                [:d [:hsk "SelectUntil" "d"]]
                [:f [:hsk "SelectUntil" "f"]]
                [:g [:hsk "SelectUntil" "g"]]
                [:left_shift [:hsk "SelectUntil" "left_shift"]]
                [:z [:hsk "SelectUntil" "z"]]
                [:x [:hsk "SelectUntil" "x"]]
                [:c [:hsk "SelectUntil" "c"]]
                [:v [:hsk "SelectUntil" "v"]]
                [:b [:hsk "SelectUntil" "b"]]
                [:spacebar [:hsk "SelectUntil" "spacebar"]]
            ]
        }
        {
            :des "JumpTo"
            :rules [:sim_slash
                [:tab [:hsk "JumpTo" "tab"]]
                [:q [:hsk "JumpTo" "q"]]
                [:w [:hsk "JumpTo" "w"]]
                [:e [:hsk "JumpTo" "e"]]
                [:r [:hsk "JumpTo" "r"]]
                [:t [:hsk "JumpTo" "t"]]
                [:caps_lock [:hsk "JumpTo" "caps_lock"]]
                [:a [:hsk "JumpTo" "a"]]
                [:s [:hsk "JumpTo" "s"]]
                [:d [:hsk "JumpTo" "d"]]
                [:f [:hsk "JumpTo" "f"]]
                [:g [:hsk "JumpTo" "g"]]
                [:left_shift [:hsk "JumpTo" "left_shift"]]
                [:z [:hsk "JumpTo" "z"]]
                [:x [:hsk "JumpTo" "x"]]
                [:c [:hsk "JumpTo" "c"]]
                [:v [:hsk "JumpTo" "v"]]
                [:b [:hsk "JumpTo" "b"]]
                [:spacebar [:hsk "JumpTo" "spacebar"]]
            ]
        }
        {
            :des "Window"
            :rules [:sim_spacebar
                [:tab [:hsk "Window" "tab"]]
                [:q [:hsk "Window" "q"]]
                [:w [:hsk "Window" "w"]]
                [:e [:hsk "Window" "e"]]
                [:r [:hsk "Window" "r"]]
                [:t [:hsk "Window" "t"]]
                [:caps_lock [:hsk "Window" "caps_lock"]]
                [:a [:hsk "Window" "a"]]
                [:s [:hsk "Window" "s"]]
                [:d [:hsk "Window" "d"]]
                [:f [:hsk "Window" "f"]]
                [:g [:hsk "Window" "g"]]
                [:left_shift [:hsk "Window" "left_shift"]]
                [:z [:hsk "Window" "z"]]
                [:x [:hsk "Window" "x"]]
                [:c [:hsk "Window" "c"]]
                [:v [:hsk "Window" "v"]]
                [:b [:!TCs] [:anybox]]
                [:b [:!STbackslash] [:arc]]
                [:b [:!OCs] [:finder]]
                [:b [:!TCs] [:mail]]
                [:b [:!SCd] [:slack]]
                [:b [:!C0] [:tableplus]]
                [:b [:!TCs] [:vivaldi]]
                [:b [:!OCc] [:zen]]
                [:b [:menu "Microsoft Outlook" "Sidebar" "View"] [:outlook]]
                [:b [:!Cbackslash] []]
                [:y [:hsk "Window" "y"]]
                [:u [:hsk "Window" "u"]]
                [:i [:hsk "Window" "i"]]
                [:o [:hsk "Window" "o"]]
                [:p [:hsk "Window" "p"]]
                [:open_bracket [:hsk "Window" "open_bracket"]]
                [:close_bracket [:hsk "Window" "close_bracket"]]
                [:h [:hsk "Window" "h"]]
                [:j [:hsk "Window" "j"]]
                [:k [:hsk "Window" "k"]]
                [:l [:hsk "Window" "l"]]
                [:semicolon [:hsk "Window" "semicolon"]]
                [:quote [:hsk "Window" "quote"]]
                [:return_or_enter [:hsk "Window" "return_or_enter"]]
                [:n [:hsk "Window" "n"]]
                [:m [:hsk "Window" "m"]]
                [:comma [:hsk "Window" "comma"]]
                [:period [:hsk "Window" "period"]]
                [:slash [:hsk "Window" "slash"]]
                [:right_shift [:hsk "Window" "right_shift"]]
            ]
        }
    ]
}
