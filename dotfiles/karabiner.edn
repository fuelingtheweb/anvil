
;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; !! | mandatory command + control + option + shift (hyper)
;; ## | optional any

{
    ; :simlayer-threshold 250
    :profiles {
        :Default {
            :default true
            :sim 250 ;; simultaneous_threshold_milliseconds (def: 50)
            ;; keys need to be pressed within this threshold to be considered simultaneous
            :delay 500 ;; to_delayed_action_delay_milliseconds (def: 500)
            ;; basically it means time after which the key press is count delayed
            :alone 1000 ;; to_if_alone_timeout_milliseconds (def: 1000)
            ;; hold for 995s and single tap registered; hold for 1005s and seen as modifier
            :held 500 ;; to_if_held_down_threshold_milliseconds (def: 500)
            ;; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)
        }
    }
    :templates {
        :launch "open -a %s"
        :hs "open -g hammerspoon://%s"
        :alfred "osascript -e 'tell application id \"com.runningwithcrayons.Alfred\" to run trigger \"%s\" in workflow \"%s\"'"
        :alfredsearch "osascript -e 'tell application id \"com.runningwithcrayons.Alfred\" to search \"%s\"'"
        :sublime "/usr/local/bin/subl \"%s\""
        :atom "/usr/local/bin/atom \"%s\""
        :chrome "\"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome\" \"%s\" --profile-directory=\"Default\""
    }
    :layers {
        :hyper-mode {:key :caps_lock :alone {:key :escape}}
    }
    :simlayers {
        :vi-mode {:key :d}
        :vi-visual-mode {:key :v}
        :launch-mode {:key :comma}
        :command-mode {:key :semicolon}
        :quote-mode {:key :quote}
        :spacebar-mode {:key :spacebar}
        :general-mode {:key :f}
        :media-mode {:key :m}
        :google-mode {:key :g}
        :code-mode {:key :c}
        :snippet-mode {:key :s}
        :test-mode {:key :t}
        :app-mode {:key :i}
        :search-mode {:key :slash}
        :open-mode {:key :o}
        :atom-mode {:key :a}
        :copy-mode {:key :y}
        :paste-mode {:key :p}
        :change-mode {:key :open_bracket}
        :destroy-mode {:key :close_bracket}
    }
    :main [
        ;; each manipulator has a description and multiple rules

        ;;{:des "..."                               ;; -> description
        ;; :rules[
        ;;          [<from>  <to>  <conditions> <other options>]    ;; -> rule 1
        ;;          [<from>  <to>  <conditions> <other options>]    ;; -> rule 2
        ;; ]}
        ;;
        ;; <from> can be keywords defined in froms or keycodes without {:not-from true}
        ;; <to> can be keywords defined in tos, keycodes without {:not-to true} or strings (shell script)
        ;; <conditions> can be keywords defined in layers, devices, applications
        ;; <other options> {:other {:parameters {:to_delayed_action_delay_milliseconds 100 :basic.to_if_alone_timeout_milliseconds 500 :basic.to_if_held_down_threshold_milliseconds 250}} }

        ;; if simplified modifier is used in <to>, optional(#) definition will be ignored.

        ;; (custom variables) & modifiers -> Advanced
        ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#custom-variable
        {
            :des "Misc Testing"
            :rules [
                [:right_option [:hs "media-showVideoBar"]]
                [:fn {:pkey :button1}] ; Mouse click. Hold for dragging
                [:!TCf :escape] ; Escape Hyperswitch
            ]
        }
        {
            :des "Hyper Mode (Key: Caps Lock)"
            :rules [:hyper-mode
                [:hyphen :!!hyphen] ; Witch (All)
                [:y [:hs "hyper-copy"]]
                [:u [:hs "hyper-copyTextArea"]]
                [:i :!!i] ; Inbox
                [:o :!!o] ; Witch (Only apps with open windows)
                [:p :!Cv] ; Paste
                [:open_bracket [:hs "hyper-openAnything"]]
                [:close_bracket [:hs "hyper-commandPalette"]] ; Command palette
                ; [:backslash :!Cescape] ; Escape yperswitch
                [:f :!Cescape] ; Escape Hyperswitch to avoid opening app in fullscreen
                [:h [:hs "hyper-previousPage"]] ; Navigate to previous page
                [:j [:hs "hyper-previousTab"]]
                [:k [:hs "hyper-nextTab"]]
                [:l [:hs "hyper-nextPage"]] ; Navigate to next page
                [:semicolon [:alfredsearch "."]] ; Alfred Commands
                [:quote :!Ctab] ; Hyperswitch (All Windows)
                [:return_or_enter :caps_lock]
                [:n :!Oz] ; Alfred
                [:m :!Oc] ; Alfred Clipboard
                [:comma [:hs "hyper-jumpTo"]]
                [:period :!STOperiod] ; Alfred Terminal
                [:slash :!Ttab] ; Hyperswitch (Current App)
                ; [:##slash :!!f]
                ; b, \, spacebar
            ]
        }
        {
            :des "Hyper Mode - Mousekey"
            :rules [:hyper-mode
                [:down_arrow {:mkey {:y 1536}}]
                [:up_arrow {:mkey {:y -1536}}]
                [:left_arrow {:mkey {:x -1536}}]
                [:right_arrow {:mkey {:x 1536}}]
                ; [:return_or_enter {:pkey :button1}]
                [:!Creturn_or_enter {:pkey :button2}]
            ]
        }
        {
            :des "Launch Mode (Key: ,)"
            :rules [:launch-mode
                [:t :!!t] ; iTerm
                [:r [:hs "launch-app?id=atom"]]
                [:e [:hs "launch-app?id=sublime"]]
                [:w [:launch "Tinkerwell.app"]]
                ; q
                [:g [:hs "launch-app?id=chrome"]]
                [:f [:launch "Notion.app"]]
                [:d [:launch "Discord.app"]]
                [:s [:launch "Spotify.app"]]
                [:a :!OCc] ; Fantastical
                [:b [:hs "launch-app?id=finder"]]
                [:v [:launch "TablePlus.app"]]
                [:c [:launch "Sublime\\ Merge.app"]]
                [:x [:launch "Postman.app"]]
                [:z [:launch "Microsoft\\ Teams.app"]]
            ]
        }
        {
            :des "Command Mode (Key: ;)"
            :rules [:command-mode
                [:t [:hs "command-newTab"]] ; New Tab
                [:r [:hs "command-reload"]]
                [:e :!SCe] ; Edit with
                [:w [:hs "command-closeWindow"]]
                [:q :!Cq] ; Quit
                [:tab :!Stab] ; Shift Tab
                ; g
                [:f [:hs "command-find"]]
                [:d [:hs "command-done"]]
                [:s [:hs "command-save"]] ; Save
                [:a :!Ca] ; Select All
                [:caps_lock [:hs "command-dismissNotifications"]] ; Dismiss notifications
                [:b :!Cd] ; Save Bookmark (Chrome)
                [:v :!SCv] ; Paste without formatting via Alfred
                [:c :!!k] ; Hide cursor
                [:x [:hs "command-cancelOrDelete"]] ; Control C
                [:z :delete_or_backspace]
                [:m :!!z] ; Spotify
            ]
        }
        {
            :des "Quote Mode (Key: ')"
            :rules [:quote-mode
                [:w [:hs "misc-closeAllWindows"]]
                [:s :!TOCs] ; Vimac: Enable Scroll
                [:b :!STCb] ; Bartender: Show
                [:a :!OCbackslash] ; Alfred: Action File
                [:x :!Odelete_or_backspace] ; Delete word
                [:d :!OCd] ; Toggle dock visibility
            ]
        }
        {
            :des "Spacebar Mode (Key: Spacebar)"
            :rules [:spacebar-mode
                [:m :!!m] ; Moom
                [:d :!TOCd] ; Moom: Move to other display
                [:f :!TOCf] ; Moom: Fullscreen
                [:return_or_enter :!TOCreturn_or_enter] ; Moom: Reset
                [:tab :!TOCtab] ; Moom: Center
                [:h :!TOCh] ; Moom: Move half screen left
                [:j :!TOCj] ; Moom: Move half screen bottom
                [:k :!TOCk] ; Moom: Move half screen top
                [:l :!TOCl] ; Moom: Move half screen right
                [:u :!TOCu] ; Moom: Move to top left
                [:o :!TOCo] ; Moom: Move to top right
                [:n :!TOCn] ; Moom: Move to bottom left
                [:period :!TOCperiod] ; Moom: Move to bottom right
                [:i :!TOCi] ; Moom: Move to Middle
                [:c :!STC4] ; Screenshot to clipboard
                [:s :!SC4] ; Screenshot to filesystem
                [:r :!SCz] ; Redo
                [:z :!Cz] ; Undo
            ]
        }
        {
            :des "General Mode (Key: F)"
            :rules [:general-mode
                [:e :!S1] ; !
                [:h :!Sgrave_accent_and_tilde] ; ~
                ; [:h [:hs "misc-scroll"]]
                [:j [:hs "misc-focusPrevious"]]
                [:k [:hs "misc-focusNext"]]
                [:l :!!l] ; Lastpass
                [:semicolon [:hs "misc-toggleSidebar"]]
                [:n :!SCn] ; New window / folder
                [:i :hyphen] ; -
                [:o :keypad_plus] ; +
                [:u :!Shyphen] ; _
                [:quote :equal_sign] ; =
                [:open_bracket :!S9] ; (
                [:close_bracket :!S0] ; )
                [:m :!S8] ; Multiply: *
                [:p :!S5] ; %
                [:y :!S7] ; &
                [:a :!S2] ; @
                [:period [:hyphen :!Speriod]] ; ->
                [:comma :!Ccomma] ; Settings
                [:slash :!Cslash] ; Comment
                [:s [:hs "misc-surround"]]
                [:d :!S4] ; -> $
            ]
        }
        {
            :des "Media Mode (Key: M)"
            :rules [:media-mode
                [:s :!SCm] ; Mute in Discord and Teams
                [:d :!SCd] ; Deafen in Discord
                [:a :!Tleft_arrow] ; Funimation: Start of video / previous video
                [:g :!Tright_arrow] ; Funimation: Next video
                [:v [:hs "media-focus"]]
                [:f [:hs "media-fullscreen"]]
                [:comma [:hs "media-back"]]
                [:period [:hs "media-forward"]]
            ]
        }
        {
            :des "Google Mode (Key: G)"
            :rules [:google-mode
                [:h [:alfred "history" "com.thomasupton.chrome-history"]]
                [:return_or_enter :!Ow] ; Chrome: Dismiss downloads bar
                [:m [:alfredsearch "bm "]] ; Google bookmarks
                [:i [:chrome "https://inbox.google.com"]]
                [:p :!SCm] ; Chrome: Show profiles list
            ]
        }
        {
            :des "Code Mode (Key: C)"
            :rules [:code-mode
                [:d :!OCi] ; Chrome: Toggle Dev Tools

                [:y [:spacebar :!S7 :!S7 :spacebar]] ; &&
                [:u :!TOu] ; Atom: Add use statement
                [:i :!STOup_arrow] ; Multiple cursors up
                [:p [:spacebar :!Sbackslash :!Sbackslash :spacebar]] ; &&

                [:j [:hs "code-moveDown"]] ; Move line down / autocomplete on iTerm
                [:k [:hs "code-moveUp"]] ; Move line up
                [:l :!OCdown_arrow] ; Atom: Go to definition
                [:semicolon :!Osemicolon] ; Atom: Toggle semicolon at end of line
                [:quote [:spacebar :equal_sign :spacebar]] ; =
                [:return_or_enter [:r :e :t :u :r :n :spacebar]] ; -> return

                [:b [:hs "code-toggleBoolean"]]
                ; n
                [:m :!STOdown_arrow] ; Multiple cursors down
                [:comma :!Ocomma] ; Atom: Toggle comma at end of line
                [:period [:spacebar :equal_sign :!Speriod :spacebar]] ; =>
                [:slash :!Tm] ; Atom: Go to matching bracket
            ]
        }
        {
            :des "App Mode (Key: I)"
            :rules [:app-mode
                [:t [:hs "app-run?key=T"]]
                ; r
                [:e [:hs "app-run?key=E"]]
                ; w
                ; q
                [:g [:hs "app-run?key=G"]]
                ; f
                [:d [:hs "app-run?key=D"]]
                [:s [:hs "app-run?key=S"]]
                [:a [:hs "app-run?key=A"]]
                [:b [:hs "app-run?key=B"]]
                ; v
                [:c [:hs "app-run?key=C"]]
                ; x
                [:z [:hs "app-run?key=Z"]]
                [:h [:hs "app-run?key=H"]]
                [:m [:hs "app-run?key=M"]]
                [:0 :!OC0] ; Notion: Create text
                [:1 :!OC1] ; Notion: Create H1 heading
                [:2 :!OC2] ; Notion: Create H2 heading
                [:3 :!OC3] ; Notion: Create H3 heading
                [:4 :!OC4] ; Notion: Create to-do checkbox
                [:5 :!OC5] ; Notion: Create bulleted list
                [:6 :!OC6] ; Notion: Create numbered list
                [:7 :!OC7] ; Notion: Create toggle list
                [:8 :!OC8] ; Notion: Create code block
            ]
        }
        {
            :des "Search Mode (Key: /)"
            :rules [:search-mode
                [:g [:alfred "google" "com.akikoz.alfred.websearchsuggest"]]
                [:z [:alfred "amazon" "com.akikoz.alfred.websearchsuggest"]]
                [:s :!Cr] ; Search for symbol
            ]
        }
        {
            :des "Open Mode (Key: O)"
            :rules [:open-mode
                [:spacebar [:alfredsearch "open "]] ; Search files
                [:k [:sublime "~/.fuelingzsh/dotfiles/goku/main.edn"]]
                [:h [:sublime "~/.hammerspoon"]]
                [:a [:sublime "~/.fuelingzsh/aliases"]]
                [:z [:sublime "~/.fuelingzsh"]]
                [:r [:hs "misc-openInAtom"]]
                [:d "open ~/Downloads"]
                [:m [:hs "custom-openModeM"]]
                [:e [:hs "custom-openModeE"]]
                [:g [:hs "misc-openInChrome"]]
                [:c [:hs "misc-openInSublimeMerge"]]
                [:t [:hs "custom-openModeT"]]
                [:s [:hs "custom-openModeS"]]
                [:b [:hs "misc-openInFinder"]]
            ]
        }
        {
            :des "Snippet Mode (Key: S)"
            :rules [:snippet-mode
                [:e [:hs "snippet?name=elseif"]]
                ; r
                [:t [:hs "snippet?name=this"]]
                [:d [:hs "snippet?name=dd"]]
                [:f [:slash :c :o :n :s :o :l :e :period :l :o :g :!S9 :return_or_enter]] ; -> search console.log( in file
                ; g, v
                ; y, u
                [:i [:hs "snippet?name=if"]]
                ; o, p, [, ]
                ; h, j, k
                [:l [:hs "snippet?name=log"]]
                ; ;, ', return
                [:b [:f :a :l :s :e]]
                [:n [:hs "snippet?name=af"]]
                [:m [:hs "snippet-method"]]
                ; ,, ., /
            ]
        }
        {
            :des "Test Mode (Key: T)" ; To mode?
            :rules [:test-mode
                [:l :!TOCt] ; Atom PHPUnit: Test All
                [:k :!OCt] ; Atom PHPUnit: Test Class
                [:m :!TOt] ; Atom PHPUnit: Test Method
                [:s [:slash :s :c :r :i :p :t :return_or_enter]] ; Search for script
            ]
        }
        {
            :des "Atom Mode (Key: A)"
            :rules [:atom-mode
                [:o :!OCo] ; Atom: New File
                [:l [:escape :v :b :g :!Ss :e]] ; Atom: Convert string to snake case
                [:u [:escape :v :b :g :!Su :e]] ; Atom: Convert string to upper case
                [:i [:escape :v :b :g :!Ss :e :v :b :g :!Su :e]] ; Atom: Convert string to constant
            ]
        }
        {
            :des "Copy Mode (Key: Y)"
            :rules [:copy-mode
                [:w [:escape :y :i :w]]; w -> word
                [:t [:escape :y :i :t]]; t -> tag
                [:s [:escape :y :i :quote]]; s -> single quotes
                [:d [:escape :y :i :!Squote]]; d -> double quotes
                [:z [:escape :y :i :!Ograve_accent_and_tilde]]; z -> back ticks
                [:f [:escape :y :i :!S9]]; f -> parenthesis
                [:c [:escape :y :i :!Sopen_bracket]]; c -> braces
                [:b [:escape :y :i :open_bracket]]; b -> brackets

                [:a [:escape :y :!S4]] ; Copy to end of line
            ]
        }
        {
            :des "Paste Mode (Key: P)"
            :rules [:paste-mode
                [:v [:escape :!Sv :p]]; v -> line
                [:w [:escape :v :i :w :p]]; w -> word
                [:t [:escape :v :i :t :p]]; t -> tag
                [:s [:escape :v :i :quote :p]]; s -> single quotes
                [:d [:escape :v :i :!Squote :p]]; d -> double quotes
                [:z [:escape :v :i :!Ograve_accent_and_tilde :p]]; z -> back ticks
                [:f [:escape :v :i :!S9 :p]]; f -> parenthesis
                [:c [:escape :v :i :!Sopen_bracket :p]]; c -> braces
                [:b [:escape :v :i :open_bracket :p]]; b -> brackets
                [:caps_lock [:alfred "paste:strip" "com.fuelingtheweb.misc"]]
            ]
        }
        {
            :des "Change Mode (Key: [)"
            :rules [:change-mode
                [:w [:escape :c :i :w]]; w -> word
                [:t [:escape :c :i :t]]; t -> tag
                [:s [:escape :c :i :quote]]; s -> single quotes
                [:d [:escape :c :i :!Squote]]; d -> double quotes
                [:z [:escape :c :i :!Ograve_accent_and_tilde]]; z -> back ticks
                [:f [:escape :c :i :!S9]]; f -> parenthesis
                [:c [:escape :c :i :!Sopen_bracket]]; c -> braces
                [:b [:escape :c :i :open_bracket]]; b -> brackets
            ]
        }
        {
            :des "Destroy Mode (Key: ])"
            :rules [:destroy-mode
                [:w [:escape :d :i :w]]; w -> word
                [:t [:escape :d :i :t]]; t -> tag
                [:s [:escape :d :i :quote]]; s -> single quotes
                [:d [:escape :d :i :!Squote]]; d -> double quotes
                [:z [:escape :d :i :!Ograve_accent_and_tilde]]; z -> back ticks
                [:f [:escape :d :i :!S9]]; f -> parenthesis
                [:c [:escape :d :i :!Sopen_bracket]]; c -> braces
                [:b [:escape :d :i :open_bracket]]; b -> brackets
            ]
        }
        {
            :des "Use right command for sticky vi and vi visual modes"
            :rules [
                [:right_command [["sticky-vi-mode" 0] ["sticky-vi-visual-mode" 1]] ["right-command-pressed-once" 1]]
                [:right_command [:right_command ["right-command-pressed-once" 1] ["sticky-vi-mode" 1]] [["sticky-vi-mode" 0] ["sticky-vi-visual-mode" 0]] {:delayed {:invoked ["right-command-pressed-once" 0] :canceled ["right-command-pressed-once" 0]}}]
                :sticky-vi-mode
                [:right_command ["sticky-vi-mode" 0]]
                :sticky-vi-visual-mode
                [:right_command ["sticky-vi-visual-mode" 0]]
            ]
        }
        {
            :des   "Sticky Vi Mode (Press right command once)"
            :rules [:sticky-vi-mode
                [:##j :down_arrow]
                [:##k :up_arrow]
                [:##h :left_arrow]
                [:##l :right_arrow]
                [:##b :!Oleft_arrow]
                [:##w :!Oright_arrow]
                [:##0 :!Cleft_arrow]
                [:##4 :!Cright_arrow]
                [:##a :!Cright_arrow]
                [:##i :!Cleft_arrow]
                [:##n :!Cdown_arrow]
                [:##u :!Cup_arrow]
            ]
        }
        {
            :des   "Vi Mode (Key: D)"
            :rules [:vi-mode
                [:##j :down_arrow]
                [:##k :up_arrow]
                [:##h :left_arrow]
                [:##l :right_arrow]
                [:##b :!Oleft_arrow]
                [:##w :!Oright_arrow]
                [:##0 :!Cleft_arrow]
                [:##4 :!Cright_arrow]
                [:##a :!Cright_arrow]
                [:##i :!Cleft_arrow]
                [:##n :!Cdown_arrow]
                [:##u :!Cup_arrow]
            ]
        }
        {
            :des   "Sticky Vi Visual Mode (Press right command twice)"
            :rules [:sticky-vi-visual-mode
                [:##j :!Sdown_arrow]
                [:##k :!Sup_arrow]
                [:##h :!Sleft_arrow]
                [:##l :!Sright_arrow]
                [:##b :!SOleft_arrow]
                [:##e :!SOright_arrow]
                [:##0 :!SCleft_arrow]
                [:##4 :!SCright_arrow]
                [:##open_bracket :!SOup_arrow]
                [:##close_bracket :!SOdown_arrow]
            ]
        }
        {
            :des   "Vi Visual Mode (Key: V)"
            :rules [:vi-visual-mode
                [:##j :!Sdown_arrow]
                [:##k :!Sup_arrow]
                [:##h :!Sleft_arrow]
                [:##l :!Sright_arrow]
                [:##b :!SOleft_arrow]
                [:##w :!SOright_arrow]
                [:##0 :!SCleft_arrow]
                [:##4 :!SCright_arrow]
                [:##a :!SCright_arrow]
                [:##i :!SCleft_arrow]
                [:##open_bracket :!SOup_arrow]
                [:##close_bracket :!SOdown_arrow]
            ]
        }
    ]
}

